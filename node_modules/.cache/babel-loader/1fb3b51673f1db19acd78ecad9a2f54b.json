{"ast":null,"code":"import * as actionTypes from '../types/types';\nimport { apiBaseUrl } from '../helpers/common';\nimport { handleResponse } from '../helpers/userServices';\nexport const fetchStart = () => {\n  return {\n    type: actionTypes.FETCH_DATA_BEGIN\n  };\n};\nexport const fetchTeamSuccess = data => {\n  return {\n    type: actionTypes.FETCH_TEAM_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchallUsersTeamSuccess = data => {\n  return {\n    type: actionTypes.FETCH_ALL_USERS_TEAM_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchSingleTeamSuccess = data => {\n  return {\n    type: actionTypes.FETCH_SINGLE_TEAM_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchSingleTeam = data => {\n  return {\n    type: actionTypes.FETCH_SINGLE_TEAM,\n    payload: data.data\n  };\n};\nexport function getAllTeams(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/user/get-teams/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'X-Auth-Token': `${localStorage.getItem('token')}`\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchTeamSuccess(data));\n    });\n  };\n}\nexport function getAllUsersTeams() {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/user/all-teams`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'X-Auth-Token': `${localStorage.getItem('token')}`\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchallUsersTeamSuccess(data));\n    });\n  };\n}\nexport function getAllTeamUsers(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/user/get-team-users/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'X-Auth-Token': `${localStorage.getItem('token')}`\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchSingleTeamSuccess(data));\n    });\n  };\n}\nexport function getSingleTeam(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/user/get-single-team/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'X-Auth-Token': `${localStorage.getItem('token')}`\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchSingleTeam(data));\n    });\n  };\n}","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/store/actions/teamsActions.js"],"names":["actionTypes","apiBaseUrl","handleResponse","fetchStart","type","FETCH_DATA_BEGIN","fetchTeamSuccess","data","FETCH_TEAM_SUCCESS","payload","fetchallUsersTeamSuccess","FETCH_ALL_USERS_TEAM_SUCCESS","fetchSingleTeamSuccess","FETCH_SINGLE_TEAM_SUCCESS","fetchSingleTeam","FETCH_SINGLE_TEAM","getAllTeams","id","dispatch","request","Request","method","headers","Headers","localStorage","getItem","fetch","then","getAllUsersTeams","getAllTeamUsers","getSingleTeam"],"mappings":"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","sourcesContent":["import * as actionTypes from '../types/types';\r\nimport {apiBaseUrl} from '../helpers/common';\r\nimport {handleResponse} from '../helpers/userServices';\r\n\r\nexport const fetchStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_BEGIN\r\n    }\r\n}\r\nexport const fetchTeamSuccess = (data) => {\r\n   \r\n    return {\r\n        type: actionTypes.FETCH_TEAM_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchallUsersTeamSuccess = (data) => {\r\n   \r\n    return {\r\n        type: actionTypes.FETCH_ALL_USERS_TEAM_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchSingleTeamSuccess = (data) => {\r\n   \r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_TEAM_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchSingleTeam = (data) => {\r\n   \r\n    return {\r\n        type: actionTypes.FETCH_SINGLE_TEAM,\r\n        payload: data.data\r\n    }\r\n}\r\nexport function getAllTeams(id) {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/user/get-teams/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchTeamSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function getAllUsersTeams() {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/user/all-teams`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchallUsersTeamSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function getAllTeamUsers(id) {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/user/get-team-users/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchSingleTeamSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function getSingleTeam(id) {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/user/get-single-team/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchSingleTeam(data))\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}