{"ast":null,"code":"var _jsxFileName = \"/home/capslock/Downloads/envy/src/components/Signup.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport toastr from 'reactjs-toastr';\nimport 'reactjs-toastr/lib/toast.css';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateLoginForm = e => {\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {} else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      e.preventDefault();\n    };\n\n    this.postData = ev => {\n      ev.preventDefault();\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {\n        this.setState({\n          isSubmit: true\n        });\n        const _this$state = this.state,\n              firstname = _this$state.firstname,\n              nickname = _this$state.nickname,\n              phone = _this$state.phone,\n              email = _this$state.email,\n              password = _this$state.password,\n              cpassword = _this$state.cpassword;\n        const message = 'you have successfully regisered on team envy, Welcome to team envy family.';\n        const request = new Request('https://xrsports.gg/team/public/signup', {\n          method: 'POST',\n          body: JSON.stringify({\n            firstname,\n            nickname,\n            phone,\n            email,\n            password,\n            message\n          }),\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          })\n        });\n\n        if (password !== cpassword) {\n          toastr.error('Passwords Dont Match', {\n            displayDuration: 1500\n          });\n        } else {\n          return fetch(request).then(res => res.json()).then(data => {\n            if (data.ResponseCode === '1') {\n              toastr.success(data.ResponseText, {\n                displayDuration: 1500\n              }); // this.props.dispatch(sendMessage(phone,invitemessage));\n\n              const request = new Request('https://xrsports.gg/team/public/user/login', {\n                method: 'POST',\n                body: JSON.stringify({\n                  email,\n                  password\n                }),\n                headers: new Headers({\n                  'Content-Type': 'application/json'\n                })\n              });\n              return fetch(request).then(res => res.json()).then(data => {\n                if (data.token) {\n                  localStorage.setItem('token', data.token);\n                  this.setState({\n                    isSubmit: true,\n                    loggedIn: true\n                  });\n                  this.props.history.push('/games');\n                  document.getElementById(\"close\").click();\n                  window.location.reload();\n                } else {\n                  this.setState({\n                    isSubmit: false,\n                    loggedIn: false\n                  });\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            } else {\n              toastr.error(data, {\n                displayDuration: 1500\n              });\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        }\n      } else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n    };\n\n    this.loginValidator = new SimpleReactValidator();\n    this.state = {\n      firstname: '',\n      nickname: '',\n      phone: '',\n      email: '',\n      password: '',\n      loading: false,\n      message: '',\n      cpassword: ''\n    };\n  }\n\n  dataChange(ev) {\n    this.setState({\n      [ev.target.name]: ev.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal fade signup\",\n      id: \"modal-container-509828\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"myModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      id: \"close\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login modal-header text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-titl text-center w-100\",\n      id: \"myModalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"CREATE ACCOUNT\")), React.createElement(\"div\", {\n      className: \"modal-body px-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 neupp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"adduser\",\n      className: \"user-forms newform\",\n      action: \"\",\n      autoComplete: \"on\",\n      method: \"post\",\n      name: \"reg_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"First Name*\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"firstname\",\n      placeholder: \"Enter Your Firstname\",\n      value: this.state.firstname,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), this.loginValidator.message('firstname', this.state.firstname, 'required'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Username*\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"nickname\",\n      placeholder: \"Enter Your nickname\",\n      value: this.state.nickname,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), this.loginValidator.message('nickname', this.state.nickname, 'required'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Email*\"), React.createElement(FormControl, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter Your E_Mail\",\n      value: this.state.email,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.loginValidator.message('email', this.state.email, 'required|email'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Phone*\"), React.createElement(PhoneInput, {\n      defaultCountry: \"US\",\n      internationalIcon: () => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-phone  icon-circle bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })),\n      type: \"text\",\n      value: this.state.phone,\n      onChange: phone => this.setState({\n        phone\n      }),\n      maxLength: \"15\",\n      className: \"form-control \",\n      placeholder: \"Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), this.loginValidator.message('phone', this.state.phone, 'required'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Password*\"), React.createElement(FormControl, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter Your Password\",\n      value: this.state.password,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), this.loginValidator.message('password', this.state.password, 'required|alpha_num'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"w-100\",\n      controlId: \"cpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Confirm Password*\"), React.createElement(FormControl, {\n      type: \"password\",\n      name: \"cpassword\",\n      placeholder: \"Confirm Password\",\n      value: this.state.cpassword,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), this.loginValidator.message('cpassword', this.state.cpassword, 'required|alpha_num'))), React.createElement(\"div\", {\n      className: \"notgroup full text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), \"I've read and agree to the \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Terms and Conditions\"))), React.createElement(\"div\", {\n      className: \"notgroup full text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"I've read and agree to the \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Privacy Poilicy\"), \"I understand my right and how my information will be collected and used as laid out by our \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Privacy Poilicy.\"))), React.createElement(\"div\", {\n      className: \"text-center wrapper py-5 mt-2\",\n      id: \"disableitornot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: ev => this.postData(ev),\n      className: \"btn btn-red btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"SIGNUP\")))))))))));\n  }\n\n}\n\nexport default withRouter(Signup);","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/components/Signup.jsx"],"names":["React","Component","withRouter","toastr","SimpleReactValidator","FormGroup","FormControl","FormLabel","PhoneInput","Signup","constructor","props","validateLoginForm","e","validate","loginValidator","allValid","showMessages","forceUpdate","setState","target","name","value","preventDefault","postData","ev","isSubmit","state","firstname","nickname","phone","email","password","cpassword","message","request","Request","method","body","JSON","stringify","headers","Headers","error","displayDuration","fetch","then","res","json","data","ResponseCode","success","ResponseText","token","localStorage","setItem","loggedIn","history","push","document","getElementById","click","window","location","reload","catch","err","console","log","loading","dataChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport toastr from 'reactjs-toastr';\nimport 'reactjs-toastr/lib/toast.css';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props)\n    this.loginValidator = new SimpleReactValidator();\n    this.state = {\n      firstname: '',\n      nickname: '',\n      phone:'',\n      email: '',\n      password: '',\n      loading: false,\n      message: '',\n      cpassword:''\n    }\n  }\n\n  dataChange(ev) {\n    this.setState({\n      [ev.target.name]: ev.target.value\n    })\n  }\n  validateLoginForm = (e) => {\n    let validate = this.loginValidator;\n    if (validate.allValid()) {} else {\n        validate.showMessages();\n        this.forceUpdate();\n    }\n    this.setState({ [e.target.name]: e.target.value });\n    e.preventDefault();\n}\n  postData =(ev) => {\n    ev.preventDefault();\n    let validate = this.loginValidator;\n    if (validate.allValid()) {\n        this.setState({ isSubmit: true });\n        const {firstname, nickname, phone, email, password ,cpassword } = this.state;\n        const message = 'you have successfully regisered on team envy, Welcome to team envy family.'\n        const request = new Request('https://xrsports.gg/team/public/signup', {\n            method: 'POST',\n            body: JSON.stringify({ firstname, nickname, phone, email, password, message}),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        if (password !== cpassword) {\n            toastr.error('Passwords Dont Match', { displayDuration: 1500 });                \n        } else {\n            return fetch(request).then(res => res.json())\n            .then((data) => {\n                if (data.ResponseCode === '1') {\n                    toastr.success(data.ResponseText,  {displayDuration:1500})\n                    // this.props.dispatch(sendMessage(phone,invitemessage));\n                    const request = new Request('https://xrsports.gg/team/public/user/login', {\n                method: 'POST',\n                body: JSON.stringify({ email, password }),\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n            })\n            return fetch(request).then(res => res.json())\n                .then((data) => {\n                    if (data.token) {\n                        localStorage.setItem('token', data.token);\n                        this.setState({ isSubmit: true , loggedIn: true});\n                        this.props.history.push('/games')\n                        document.getElementById(\"close\").click();\n                        window.location.reload()\n                    } else {\n                        this.setState({ isSubmit: false , loggedIn: false});\n                    }\n                }).catch((err) => {\n                    console.log(err)\n                })\n                } else {\n                    toastr.error(data,  {displayDuration:1500})        \n                }\n            }).catch((err) => {\n                console.log(err)\n            })\n        }\n    } else {\n        validate.showMessages();\n        this.forceUpdate();\n    }\n  }\n\n\n  render() {\n    return (\n\n        <div className=\"modal fade signup\" id=\"modal-container-509828\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n     \n        <button type=\"button\" className=\"close\" id=\"close\" data-dismiss=\"modal\">&times;</button>\n       <div className=\"container\">\n           <div className=\"row\">\n       <div className=\"col-md-12\">\n          \n        <div className=\"login modal-dialog\" role=\"document\">\n        <div className=\"login modal-content\">\n            <div className=\"login modal-header text-center\">\n                <h5 className=\"modal-titl text-center w-100\" id=\"myModalLabel\">\n                CREATE ACCOUNT\n                </h5>\n            </div>\n        <div className=\"modal-body px-0\">\n        <div className=\"col-md-12 neupp\">\n                <form id=\"adduser\" className=\"user-forms newform\" action=\"\" autoComplete=\"on\" method=\"post\" name=\"reg_form\">\n                    <div className=\"form-group\">\n                        <FormGroup className=\"w-100\" controlId=\"firstname\">\n                        <FormLabel>First Name*</FormLabel>\n                        <FormControl type=\"text\" name=\"firstname\" placeholder=\"Enter Your Firstname\" value={this.state.firstname} onChange={e => this.validateLoginForm(e)} />\n                        {this.loginValidator.message('firstname', this.state.firstname, 'required')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group\">\n                    <FormGroup className=\"w-100\" controlId=\"nickname\">\n                        <FormLabel>Username*</FormLabel>\n                        <FormControl type=\"text\" name=\"nickname\" placeholder=\"Enter Your nickname\" value={this.state.nickname} onChange={e => this.validateLoginForm(e)} />\n                        {this.loginValidator.message('nickname', this.state.nickname, 'required')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group\">\n                        <FormGroup className=\"w-100\" controlId=\"email\">\n                        <FormLabel>Email*</FormLabel>\n                        <FormControl type=\"email\" name=\"email\" placeholder=\"Enter Your E_Mail\" value={this.state.email} onChange={e => this.validateLoginForm(e)} />\n                        {this.loginValidator.message('email', this.state.email, 'required|email')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group\">\n                        <FormGroup className=\"w-100\" controlId=\"phone\">\n                        <FormLabel>Phone*</FormLabel>\n                        {/* <FormControl type=\"text\" name=\"phone\" placeholder=\"Enter Your Phone\" value={this.state.phone} onChange={e => this.validateLoginForm(e)} /> */}\n                        <PhoneInput defaultCountry=\"US\" internationalIcon={()=><span ><i className=\"fa fa-phone  icon-circle bg-danger\"></i></span> }  type=\"text\" value={ this.state.phone } onChange={phone => this.setState({ phone })} maxLength = \"15\" className=\"form-control \" placeholder=\"Phone\" />\n                        {this.loginValidator.message('phone', this.state.phone, 'required')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group\">\n                        <FormGroup className=\"w-100\" controlId=\"password\">\n                        <FormLabel>Password*</FormLabel>\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Enter Your Password\" value={this.state.password} onChange={e => this.validateLoginForm(e)} />\n                        {this.loginValidator.message('password', this.state.password, 'required|alpha_num')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"form-group\">\n                        <FormGroup className=\"w-100\" controlId=\"cpassword\">\n                        <FormLabel>Confirm Password*</FormLabel>\n                        <FormControl type=\"password\" name=\"cpassword\" placeholder=\"Confirm Password\" value={this.state.cpassword} onChange={e => this.validateLoginForm(e)} />\n                        {this.loginValidator.message('cpassword', this.state.cpassword, 'required|alpha_num')}\n                        </FormGroup>\n                    </div>\n                    <div className=\"notgroup full text-left\">\n                        <p><input className=\"form-check-input\" type=\"checkbox\" required/>I've read and agree to the <a href=\"/\">Terms and Conditions</a></p>\n                    </div>\n                    <div className=\"notgroup full text-left\">\n                        <p><input className=\"form-check-input\" type=\"checkbox\" required/>I've read and agree to the <a href=\"/\">Privacy Poilicy</a>\n                        I understand my right and how my information will be collected and used as laid out by our <a href=\"/\">Privacy Poilicy.</a></p>\n                    </div>\n                    <div className=\"text-center wrapper py-5 mt-2\" id=\"disableitornot\" >\n                    <button type=\"submit\" onClick={(ev) => this.postData(ev)}  className=\"btn btn-red btn-lg\">SIGNUP</button>\n                    </div>\n                </form>\n            </div>\n           \n        </div>\n        </div>\n       \n            \n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    );\n  }\n}\nexport default withRouter(Signup);\n"]},"metadata":{},"sourceType":"module"}