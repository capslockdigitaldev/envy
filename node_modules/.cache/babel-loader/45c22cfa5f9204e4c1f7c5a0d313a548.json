{"ast":null,"code":"var _jsxFileName = \"/home/capslock/Downloads/envy/src/admincomponents/AddTournaments.jsx\";\nimport React, { Component } from 'react';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { getAllgames } from './../store/actions/gamesActions';\nimport { connect } from 'react-redux';\nimport $ from \"jquery\";\nimport toastr from \"reactjs-toastr\";\nimport axios from 'axios';\n\nclass AddTournaments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateTourForm = e => {\n      e.preventDefault();\n      let validate = this.tourValidator;\n\n      if (validate.allValid()) {} else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createTour = e => {\n      e.preventDefault();\n      let validate = this.tourValidator;\n\n      if (validate.allValid()) {\n        this.setState({\n          isSubmit: true\n        });\n        const _this$state = this.state,\n              tourtitle = _this$state.tourtitle,\n              price = _this$state.price,\n              exclusive_tournament = _this$state.exclusive_tournament,\n              prize = _this$state.prize,\n              prize_type = _this$state.prize_type,\n              platform = _this$state.platform,\n              game = _this$state.game,\n              theme = _this$state.theme,\n              reg_open_date = _this$state.reg_open_date,\n              reg_close_date = _this$state.reg_close_date,\n              tour_start_date = _this$state.tour_start_date,\n              tour_end_date = _this$state.tour_end_date,\n              time = _this$state.time,\n              prizepool = _this$state.prizepool,\n              prizeone = _this$state.prizeone,\n              prizetwo = _this$state.prizetwo,\n              prizethree = _this$state.prizethree,\n              reward1name = _this$state.reward1name,\n              reward2name = _this$state.reward2name,\n              reward3name = _this$state.reward3name,\n              brackets = _this$state.brackets,\n              type = _this$state.type,\n              description = _this$state.description,\n              rules = _this$state.rules,\n              facebook = _this$state.facebook,\n              twitter = _this$state.twitter,\n              instagram = _this$state.instagram,\n              youtube = _this$state.youtube;\n        let request;\n        let formData = new FormData();\n        formData.append('reward1image', $('#reward1image')[0].files[0]);\n        formData.append('reward2image', $('#reward2image')[0].files[0]);\n        formData.append('reward3image', $('#reward3image')[0].files[0]);\n        formData.append('prizeimage', $('#prizeimage')[0].files[0]);\n        formData.append('tourtitle', tourtitle);\n        formData.append('price', price);\n        formData.append('exclusive_tournament', exclusive_tournament);\n        formData.append('prize', prize);\n        formData.append('prize_type', prize_type);\n        formData.append('platform', platform);\n        formData.append('game', game);\n        formData.append('reg_open_date', reg_open_date);\n        formData.append('reg_close_date', reg_close_date);\n        formData.append('tour_start_date', tour_start_date);\n        formData.append('tour_end_date', tour_end_date);\n        formData.append('time', time);\n        formData.append('prizepool', prizepool);\n        formData.append('prizeone', prizeone);\n        formData.append('prizetwo', prizetwo);\n        formData.append('prizethree', prizethree);\n        formData.append('reward1name', reward1name);\n        formData.append('reward2name', reward2name);\n        formData.append('reward3name', reward3name);\n        formData.append('brackets', brackets);\n        formData.append('type', type);\n        formData.append('description', description);\n        formData.append('rules', rules);\n        formData.append('facebook', facebook);\n        formData.append('twitter', twitter);\n        formData.append('instagram', instagram);\n        formData.append('youtube', youtube);\n        formData.append('theme', theme);\n        request = {\n          method: 'POST',\n          url: `https://xrsports.gg/team/public/user/create-tournament`,\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Auth-Token': `${localStorage.getItem('token')}`\n          },\n          data: formData\n        };\n        axios(request).then(data => {\n          if (data.data.ResponseCode === \"1\") {\n            document.getElementById(\"close\").click();\n            toastr.success(data.data.ResponseText, {\n              displayDuration: 1500\n            });\n          } else {\n            toastr.error(data.data, {\n              displayDuration: 1500\n            });\n          }\n        });\n      } else {\n        validate.showMessages(); // rerender to show messages for the first time\n\n        this.forceUpdate();\n      }\n    };\n\n    this.tourValidator = new SimpleReactValidator();\n    this.state = {\n      totalItems: '',\n      sortOrderBy: 'asc',\n      isSubmit: false,\n      pageOfItems: [],\n      tourtitle: '',\n      price: '',\n      exclusive_tournament: '',\n      prize: '',\n      prize_type: '',\n      platform: '',\n      game: '',\n      theme: '',\n      reg_open_date: '',\n      reg_close_date: '',\n      tour_start_date: '',\n      tour_end_date: '',\n      time: '',\n      prizepool: '',\n      prizeone: '',\n      prizetwo: '',\n      prizethree: '',\n      prizeimage: '',\n      reward1name: '',\n      reward2name: '',\n      reward3name: '',\n      reward1image: '',\n      reward2image: '',\n      reward3image: '',\n      brackets: '',\n      type: '',\n      description: '',\n      rules: '',\n      facebook: '',\n      twitter: '',\n      instagram: '',\n      youtube: '',\n      allgames: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllgames());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      allgames: nextProps.gamesdata\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"adminright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ibox-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ibox-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Tournament Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      id: \"tourtitle\",\n      tabIndex: \"1\",\n      size: \"20\",\n      name: \"tourtitle\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), this.tourValidator.message('tourtitle', this.state.tourtitle, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Tournament Price\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      id: \"price\",\n      tabIndex: \"1\",\n      size: \"20\",\n      name: \"price\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), this.tourValidator.message('price', this.state.price, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Exclusive Tournament\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"exclusive_tournament\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Exclusive Tournament?\"), React.createElement(\"option\", {\n      value: \"no\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"No\"), React.createElement(\"option\", {\n      value: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Yes\")), this.tourValidator.message('exclusive_tournament', this.state.exclusive_tournament, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Prize\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"prize\",\n      id: \"tourprize\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Selwct prize method\"), React.createElement(\"option\", {\n      value: \"cash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Cash\"), React.createElement(\"option\", {\n      value: \"rewards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Rewards\")), this.tourValidator.message('prize', this.state.prize, 'required')), React.createElement(FormGroup, {\n      id: \"prizetypetag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Prize type\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"prize_type\",\n      id: \"prize_type\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"prize type\"), React.createElement(\"option\", {\n      value: \"merch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Merch\"), React.createElement(\"option\", {\n      value: \"shoes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Shoes\"), React.createElement(\"option\", {\n      value: \"freesize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Free size\")), this.tourValidator.message('prize_type', this.state.prize_type, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Tournament Platfrom\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"platform\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"ps4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"PlayStation 4\"), React.createElement(\"option\", {\n      value: \"xbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"XBOX\"), React.createElement(\"option\", {\n      value: \"pc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"PC\")), this.tourValidator.message('platform', this.state.platform, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Game\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"game\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Choose Game\"), this.state.allgames.length > 0 ? this.state.allgames.map(post => React.createElement(\"option\", {\n      value: post.game_name,\n      key: post.game_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, post.game_title)) : ''), this.tourValidator.message('game', this.state.game, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Theme\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"theme\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Choose a Theme\"), React.createElement(\"option\", {\n      value: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Dark\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Light\")), this.tourValidator.message('theme', this.state.theme, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Registeration Start Date\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"date\",\n      id: \"reg_open_date\",\n      required: true,\n      pattern: \"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\",\n      name: \"reg_open_date\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), this.tourValidator.message('reg_open_date', this.state.reg_open_date, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Registeration Close Date\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"date\",\n      id: \"reg_close_date\",\n      required: true,\n      pattern: \"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\",\n      name: \"reg_close_date\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), this.tourValidator.message('reg_close_date', this.state.reg_close_date, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Tournament Start Date\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"date\",\n      id: \"tour_start_date\",\n      required: true,\n      pattern: \"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\",\n      name: \"tour_start_date\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), this.tourValidator.message('tour_start_date', this.state.tour_start_date, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Tournament Close Date\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"date\",\n      id: \"tour_end_date\",\n      required: true,\n      pattern: \"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\",\n      name: \"tour_end_date\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), this.tourValidator.message('tour_end_date', this.state.tour_end_date, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Tournament Start Time\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"time\",\n      id: \"time\",\n      required: true,\n      pattern: \"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\",\n      name: \"time\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), this.tourValidator.message('time', this.state.time, 'required')), React.createElement(FormGroup, {\n      id: \"prizepool\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"prize pool\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"prizepool\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), this.tourValidator.message('prizepool', this.state.prizepool, 'required')), React.createElement(FormGroup, {\n      id: \"firstprizee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"First prize\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"prizeone\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), this.tourValidator.message('prizeone', this.state.prizeone, 'required')), React.createElement(FormGroup, {\n      id: \"secondprize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Second prize\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"prizetwo\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), this.tourValidator.message('prizetwo', this.state.prizetwo, 'required')), React.createElement(FormGroup, {\n      id: \"thirddprize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Third prize\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"prizethree\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), this.tourValidator.message('prizethree', this.state.prizethree, 'required')), React.createElement(FormGroup, {\n      id: \"prizethumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Prize Image\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"file\",\n      name: \"prizeimage\",\n      id: \"prizeimage\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), this.tourValidator.message('prizeimage', this.state.prizeimage, 'required')), React.createElement(FormGroup, {\n      id: \"rew1name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Reward for 1st Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"reward1name\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), this.tourValidator.message('reward1name', this.state.reward1name, 'required')), React.createElement(FormGroup, {\n      id: \"rew1image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Reward 1st Image\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"file\",\n      name: \"reward1image\",\n      id: \"reward1image\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), this.tourValidator.message('reward1image', this.state.reward1image, 'required')), React.createElement(FormGroup, {\n      id: \"rew2name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Reward for 2nd Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"reward2name\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), this.tourValidator.message('reward2name', this.state.reward2name, 'required')), React.createElement(FormGroup, {\n      id: \"rew2image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Reward 2nd Image\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"file\",\n      name: \"reward2image\",\n      id: \"reward2image\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), this.tourValidator.message('reward2image', this.state.reward2image, 'required')), React.createElement(FormGroup, {\n      id: \"rew3name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Reward for 3rd Player\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"reward3name\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), this.tourValidator.message('reward3name', this.state.reward3name, 'required')), React.createElement(FormGroup, {\n      id: \"rew3image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Reward 3rd Image\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"file\",\n      name: \"reward3image\",\n      id: \"reward3image\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), this.tourValidator.message('reward3image', this.state.reward3image, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Total Players\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"brackets\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      value: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"16\"), React.createElement(\"option\", {\n      value: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"32\"), React.createElement(\"option\", {\n      value: \"64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"64\")), this.tourValidator.message('brackets', this.state.brackets, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Tournament type\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"type\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"single\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Single Elimination\"), React.createElement(\"option\", {\n      value: \"double\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Double Elimination\")), this.tourValidator.message('type', this.state.type, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Tournament Description\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"w-100\",\n      id: \"description\",\n      tabIndex: \"3\",\n      name: \"description\",\n      cols: \"50\",\n      rows: \"6\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), this.tourValidator.message('description', this.state.description, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"rules\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Tournament Rules\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"w-100\",\n      id: \"rules\",\n      tabIndex: \"3\",\n      name: \"rules\",\n      cols: \"50\",\n      rows: \"6\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), this.tourValidator.message('rules', this.state.rules, 'required')), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Social Media Links\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"fb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Facebook\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"facebook\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), this.tourValidator.message('facebook', this.state.facebook, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"insta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Instagram\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"instagram\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), this.tourValidator.message('instagram', this.state.instagram, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Twitter\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"twitter\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), this.tourValidator.message('twitter', this.state.twitter, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      htmlFor: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"Youtube\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"youtube\",\n      onChange: e => this.validateTourForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), this.tourValidator.message('youtube', this.state.youtube, 'required')), React.createElement(\"div\", {\n      className: \"text-center wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => this.createTour(e),\n      disabled: this.state.isSubmit,\n      className: \"btn btn-red btn-block btn-lg profilebuttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, this.state.isSubmit ? 'PLEASE WAIT..' : 'CREATE')))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  gamesdata: state.games.data\n});\n\nexport default connect(mapStateToProps)(AddTournaments);","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/admincomponents/AddTournaments.jsx"],"names":["React","Component","FormGroup","FormControl","FormLabel","SimpleReactValidator","getAllgames","connect","$","toastr","axios","AddTournaments","constructor","props","validateTourForm","e","preventDefault","validate","tourValidator","allValid","showMessages","forceUpdate","setState","target","name","value","createTour","isSubmit","state","tourtitle","price","exclusive_tournament","prize","prize_type","platform","game","theme","reg_open_date","reg_close_date","tour_start_date","tour_end_date","time","prizepool","prizeone","prizetwo","prizethree","reward1name","reward2name","reward3name","brackets","type","description","rules","facebook","twitter","instagram","youtube","request","formData","FormData","append","files","method","url","headers","localStorage","getItem","data","then","ResponseCode","document","getElementById","click","success","ResponseText","displayDuration","error","totalItems","sortOrderBy","pageOfItems","prizeimage","reward1image","reward2image","reward3image","allgames","componentDidMount","dispatch","componentWillReceiveProps","nextProps","gamesdata","render","message","length","map","post","game_name","game_title","mapStateToProps","games"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,iBAAlD;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,cAAN,SAA6BV,SAA7B,CAAuC;AACnCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA8CnBC,gBA9CmB,GA8CCC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,QAAQ,GAAG,KAAKC,aAApB;;AACA,UAAID,QAAQ,CAACE,QAAT,EAAJ,EAAyB,CAExB,CAFD,MAEO;AACHF,QAAAA,QAAQ,CAACG,YAAT;AACA,aAAKC,WAAL;AACH;;AACD,WAAKC,QAAL,CAAc;AAAE,SAACP,CAAC,CAACQ,MAAF,CAASC,IAAV,GAAiBT,CAAC,CAACQ,MAAF,CAASE;AAA5B,OAAd;AACH,KAzDkB;;AAAA,SA+DnBC,UA/DmB,GA+DLX,CAAD,IAAM;AAEfA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,QAAQ,GAAG,KAAKC,aAApB;;AACA,UAAID,QAAQ,CAACE,QAAT,EAAJ,EAAyB;AACrB,aAAKG,QAAL,CAAc;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AADqB,4BAK4C,KAAKC,KALjD;AAAA,cAEhBC,SAFgB,eAEhBA,SAFgB;AAAA,cAENC,KAFM,eAENA,KAFM;AAAA,cAEAC,oBAFA,eAEAA,oBAFA;AAAA,cAEqBC,KAFrB,eAEqBA,KAFrB;AAAA,cAE2BC,UAF3B,eAE2BA,UAF3B;AAAA,cAEsCC,QAFtC,eAEsCA,QAFtC;AAAA,cAE+CC,IAF/C,eAE+CA,IAF/C;AAAA,cAEoDC,KAFpD,eAEoDA,KAFpD;AAAA,cAE0DC,aAF1D,eAE0DA,aAF1D;AAAA,cAGjBC,cAHiB,eAGjBA,cAHiB;AAAA,cAGFC,eAHE,eAGFA,eAHE;AAAA,cAGcC,aAHd,eAGcA,aAHd;AAAA,cAG4BC,IAH5B,eAG4BA,IAH5B;AAAA,cAGiCC,SAHjC,eAGiCA,SAHjC;AAAA,cAG4CC,QAH5C,eAG4CA,QAH5C;AAAA,cAGqDC,QAHrD,eAGqDA,QAHrD;AAAA,cAG8DC,UAH9D,eAG8DA,UAH9D;AAAA,cAIjBC,WAJiB,eAIjBA,WAJiB;AAAA,cAILC,WAJK,eAILA,WAJK;AAAA,cAIOC,WAJP,eAIOA,WAJP;AAAA,cAImBC,QAJnB,eAImBA,QAJnB;AAAA,cAKjBC,IALiB,eAKjBA,IALiB;AAAA,cAKZC,WALY,eAKZA,WALY;AAAA,cAKAC,KALA,eAKAA,KALA;AAAA,cAKMC,QALN,eAKMA,QALN;AAAA,cAKeC,OALf,eAKeA,OALf;AAAA,cAKuBC,SALvB,eAKuBA,SALvB;AAAA,cAKiCC,OALjC,eAKiCA,OALjC;AAMjB,YAAIC,OAAJ;AACA,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCpD,CAAC,CAAC,eAAD,CAAD,CAAmB,CAAnB,EAAsBqD,KAAtB,CAA4B,CAA5B,CAAhC;AACAH,QAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCpD,CAAC,CAAC,eAAD,CAAD,CAAmB,CAAnB,EAAsBqD,KAAtB,CAA4B,CAA5B,CAAhC;AACAH,QAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCpD,CAAC,CAAC,eAAD,CAAD,CAAmB,CAAnB,EAAsBqD,KAAtB,CAA4B,CAA5B,CAAhC;AACAH,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BpD,CAAC,CAAC,aAAD,CAAD,CAAiB,CAAjB,EAAoBqD,KAApB,CAA0B,CAA1B,CAA9B;AACAH,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B/B,SAA7B;AACA6B,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB9B,KAAzB;AACA4B,QAAAA,QAAQ,CAACE,MAAT,CAAgB,sBAAhB,EAAwC7B,oBAAxC;AACA2B,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB5B,KAAzB;AACA0B,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B3B,UAA9B;AACAyB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B1B,QAA5B;AACAwB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBzB,IAAxB;AACAuB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCvB,aAAjC;AACAqB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkCtB,cAAlC;AACAoB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmCrB,eAAnC;AACAmB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCpB,aAAjC;AACAkB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBnB,IAAxB;AACAiB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BlB,SAA7B;AACAgB,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BjB,QAA5B;AACAe,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BhB,QAA5B;AACAc,QAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8Bf,UAA9B;AACAa,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bd,WAA/B;AACAY,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bb,WAA/B;AACAW,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BZ,WAA/B;AACAU,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BX,QAA5B;AACAS,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBV,IAAxB;AACAQ,QAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BT,WAA/B;AACAO,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBR,KAAzB;AACAM,QAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BP,QAA5B;AACAK,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BN,OAA3B;AACAI,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BL,SAA7B;AACAG,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BJ,OAA3B;AACAE,QAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBxB,KAAzB;AACDqB,QAAAA,OAAO,GAAG;AACTK,UAAAA,MAAM,EAAE,MADC;AAETC,UAAAA,GAAG,EAAG,wDAFG;AAGTC,UAAAA,OAAO,EAAE;AAAE,4BAAgB,kBAAlB;AAAsC,4BAAiB,GAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAAvF,WAHA;AAITC,UAAAA,IAAI,EAAET;AAJG,SAAV;AAOHhD,QAAAA,KAAK,CAAC+C,OAAD,CAAL,CAAeW,IAAf,CAAqBD,IAAD,IAAU;AAC5B,cAAIA,IAAI,CAACA,IAAL,CAAUE,YAAV,KAA2B,GAA/B,EAAoC;AAClCC,YAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC;AACA/D,YAAAA,MAAM,CAACgE,OAAP,CAAeN,IAAI,CAACA,IAAL,CAAUO,YAAzB,EAAuC;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aAAvC;AACE,WAHJ,MAGS;AACPlE,YAAAA,MAAM,CAACmE,KAAP,CAAaT,IAAI,CAACA,IAAlB,EAAwB;AAAEQ,cAAAA,eAAe,EAAE;AAAnB,aAAxB;AACD;AACF,SAPD;AAQC,OAvDL,MAuDW;AACH1D,QAAAA,QAAQ,CAACG,YAAT,GADG,CAEH;;AACA,aAAKC,WAAL;AACH;AACR,KA/HkB;;AAEf,SAAKH,aAAL,GAAqB,IAAIb,oBAAJ,EAArB;AACA,SAAKuB,KAAL,GAAa;AACTiD,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,WAAW,EAAE,KAFJ;AAGTnD,MAAAA,QAAQ,EAAE,KAHD;AAIToD,MAAAA,WAAW,EAAE,EAJJ;AAKTlD,MAAAA,SAAS,EAAC,EALD;AAMTC,MAAAA,KAAK,EAAC,EANG;AAOTC,MAAAA,oBAAoB,EAAC,EAPZ;AAQTC,MAAAA,KAAK,EAAC,EARG;AASTC,MAAAA,UAAU,EAAC,EATF;AAUTC,MAAAA,QAAQ,EAAC,EAVA;AAWTC,MAAAA,IAAI,EAAC,EAXI;AAYTC,MAAAA,KAAK,EAAC,EAZG;AAaTC,MAAAA,aAAa,EAAC,EAbL;AAcTC,MAAAA,cAAc,EAAC,EAdN;AAeTC,MAAAA,eAAe,EAAC,EAfP;AAgBTC,MAAAA,aAAa,EAAC,EAhBL;AAiBTC,MAAAA,IAAI,EAAC,EAjBI;AAkBTC,MAAAA,SAAS,EAAC,EAlBD;AAmBTC,MAAAA,QAAQ,EAAC,EAnBA;AAoBTC,MAAAA,QAAQ,EAAC,EApBA;AAqBTC,MAAAA,UAAU,EAAC,EArBF;AAsBTmC,MAAAA,UAAU,EAAC,EAtBF;AAuBTlC,MAAAA,WAAW,EAAC,EAvBH;AAwBTC,MAAAA,WAAW,EAAC,EAxBH;AAyBTC,MAAAA,WAAW,EAAC,EAzBH;AA0BTiC,MAAAA,YAAY,EAAC,EA1BJ;AA2BTC,MAAAA,YAAY,EAAC,EA3BJ;AA4BTC,MAAAA,YAAY,EAAC,EA5BJ;AA6BTlC,MAAAA,QAAQ,EAAC,EA7BA;AA8BTC,MAAAA,IAAI,EAAC,EA9BI;AA+BTC,MAAAA,WAAW,EAAC,EA/BH;AAgCTC,MAAAA,KAAK,EAAC,EAhCG;AAiCTC,MAAAA,QAAQ,EAAC,EAjCA;AAkCTC,MAAAA,OAAO,EAAC,EAlCC;AAmCTC,MAAAA,SAAS,EAAC,EAnCD;AAoCTC,MAAAA,OAAO,EAAC,EApCC;AAqCT4B,MAAAA,QAAQ,EAAC;AArCA,KAAb;AAuCH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKxE,KAAL,CAAWyE,QAAX,CAAoBhF,WAAW,EAA/B;AACH;;AAaDiF,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,SAAKlE,QAAL,CAAc;AACV8D,MAAAA,QAAQ,EAAEI,SAAS,CAACC;AADV,KAAd;AAGH;;AAkEDC,EAAAA,MAAM,GAAG;AACL,WACR;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN,EAIM,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,WAA5B;AAAwC,MAAA,QAAQ,EAAC,GAAjD;AAAqD,MAAA,IAAI,EAAC,IAA1D;AAA+D,MAAA,IAAI,EAAC,WAApE;AAAgF,MAAA,QAAQ,EAAE3E,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJN,EAKO,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,WAA3B,EAAwC,KAAK/D,KAAL,CAAWC,SAAnD,EAA8D,UAA9D,CALP,CADA,EAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAoC,MAAA,QAAQ,EAAC,GAA7C;AAAiD,MAAA,IAAI,EAAC,IAAtD;AAA2D,MAAA,IAAI,EAAC,OAAhE;AAAwE,MAAA,QAAQ,EAAEd,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,OAA3B,EAAoC,KAAK/D,KAAL,CAAWE,KAA/C,EAAsD,UAAtD,CAJH,CARJ,EAcI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,sBAAb;AAAoC,MAAA,QAAQ,EAAEf,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAHF,EAQG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,sBAA3B,EAAmD,KAAK/D,KAAL,CAAWG,oBAA9D,EAAoF,UAApF,CARH,CAdJ,EAwBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,EAAE,EAAC,WAAxB;AAAoC,MAAA,QAAQ,EAAEhB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,EAEM;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,EAGM;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHN,CAHF,EAQG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,OAA3B,EAAoC,KAAK/D,KAAL,CAAWI,KAA/C,EAAsD,UAAtD,CARH,CAxBJ,EAkCI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,EAAE,EAAC,YAA7B;AAA0C,MAAA,QAAQ,EAAEjB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADP,EAEM;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFN,EAGM;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHN,EAIM;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJN,CAHF,EASG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,YAA3B,EAAyC,KAAK/D,KAAL,CAAWK,UAApD,EAAgE,UAAhE,CATH,CAlCJ,EAwDI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAElB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CAHF,EAQG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,UAA3B,EAAuC,KAAK/D,KAAL,CAAWM,QAAlD,EAA4D,UAA5D,CARH,CAxDJ,EAkEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAEnB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEM,KAAKa,KAAL,CAAWwD,QAAX,CAAoBQ,MAApB,GAA6B,CAA7B,GAA+B,KAAKhE,KAAL,CAAWwD,QAAX,CAAoBS,GAApB,CAAyBC,IAAD,IAC/B;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,SAApB;AAA+B,MAAA,GAAG,EAAED,IAAI,CAACC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDD,IAAI,CAACE,UAA1D,CADO,CAA/B,GAE2B,EAJjC,CAJF,EAWG,KAAK9E,aAAL,CAAmByE,OAAnB,CAA2B,MAA3B,EAAmC,KAAK/D,KAAL,CAAWO,IAA9C,EAAoD,UAApD,CAXH,CAlEJ,EA+EI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,QAAQ,EAAEpB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADN,EAEM;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFN,EAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHN,CAJF,EASG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,OAA3B,EAAoC,KAAK/D,KAAL,CAAWQ,KAA/C,EAAsD,UAAtD,CATH,CA/EJ,EA0FI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,eAA5B;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,OAAO,EAAC,+HAA/D;AAA+L,MAAA,IAAI,EAAC,eAApM;AAAoN,MAAA,QAAQ,EAAErB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAnO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,eAA3B,EAA4C,KAAK/D,KAAL,CAAWS,aAAvD,EAAsE,UAAtE,CALH,CA1FJ,EAiGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,gBAA5B;AAA6C,MAAA,QAAQ,MAArD;AAAsD,MAAA,OAAO,EAAC,+HAA9D;AAA+L,MAAA,IAAI,EAAC,gBAApM;AAAqN,MAAA,QAAQ,EAAEtB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAApO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,gBAA3B,EAA6C,KAAK/D,KAAL,CAAWU,cAAxD,EAAwE,UAAxE,CALH,CAjGJ,EAwGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,iBAA5B;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,OAAO,EAAC,+HAA/D;AAAgM,MAAA,IAAI,EAAC,iBAArM;AAAuN,MAAA,QAAQ,EAAEvB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAtO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,iBAA3B,EAA8C,KAAK/D,KAAL,CAAWW,eAAzD,EAA0E,UAA1E,CALH,CAxGJ,EA+GI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,eAA5B;AAA4C,MAAA,QAAQ,MAApD;AAAqD,MAAA,OAAO,EAAC,+HAA7D;AAA8L,MAAA,IAAI,EAAC,eAAnM;AAAmN,MAAA,QAAQ,EAAExB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAlO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,eAA3B,EAA4C,KAAK/D,KAAL,CAAWY,aAAvD,EAAsE,UAAtE,CALH,CA/GJ,EAsHK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,EAAE,EAAC,MAA5B;AAAmC,MAAA,QAAQ,MAA3C;AAA4C,MAAA,OAAO,EAAC,+HAApD;AAAqL,MAAA,IAAI,EAAC,MAA1L;AAAiM,MAAA,QAAQ,EAAEzB,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAhN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKE,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,MAA3B,EAAmC,KAAK/D,KAAL,CAAWa,IAA9C,EAAoD,UAApD,CALF,CAtHL,EA6HI,oBAAC,SAAD;AAAY,MAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,WAA9B;AAA0C,MAAA,QAAQ,EAAE1B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,WAA3B,EAAwC,KAAK/D,KAAL,CAAWc,SAAnD,EAA8D,UAA9D,CALH,CA7HJ,EAoII,oBAAC,SAAD;AAAY,MAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,QAAQ,EAAE3B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,UAA3B,EAAuC,KAAK/D,KAAL,CAAWe,QAAlD,EAA4D,UAA5D,CALH,CApIJ,EA2II,oBAAC,SAAD;AAAY,MAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,QAAQ,EAAE5B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,UAA3B,EAAuC,KAAK/D,KAAL,CAAWgB,QAAlD,EAA4D,UAA5D,CALH,CA3IJ,EAkJI,oBAAC,SAAD;AAAY,MAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,YAA9B;AAA2C,MAAA,QAAQ,EAAE7B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,YAA3B,EAAyC,KAAK/D,KAAL,CAAWiB,UAApD,EAAgE,UAAhE,CALH,CAlJJ,EAyJI,oBAAC,SAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,YAA9B;AAA2C,MAAA,EAAE,EAAC,YAA9C;AAA2D,MAAA,QAAQ,EAAE9B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,YAA3B,EAAyC,KAAK/D,KAAL,CAAWoD,UAApD,EAAgE,UAAhE,CALH,CAzJJ,EAgKI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,aAA9B;AAA4C,MAAA,QAAQ,EAAEjE,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,aAA3B,EAA0C,KAAK/D,KAAL,CAAWkB,WAArD,EAAkE,UAAlE,CALH,CAhKJ,EAuKM,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,cAA9B;AAA6C,MAAA,EAAE,EAAC,cAAhD;AAA+D,MAAA,QAAQ,EAAE/B,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKC,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,cAA3B,EAA2C,KAAK/D,KAAL,CAAWqD,YAAtD,EAAoE,UAApE,CALD,CAvKN,EA8KK,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,aAA9B;AAA4C,MAAA,QAAQ,EAAElE,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKE,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,aAA3B,EAA0C,KAAK/D,KAAL,CAAWmB,WAArD,EAAkE,UAAlE,CALF,CA9KL,EAqLM,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,cAA9B;AAA6C,MAAA,EAAE,EAAC,cAAhD;AAA+D,MAAA,QAAQ,EAAEhC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKC,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,cAA3B,EAA2C,KAAK/D,KAAL,CAAWsD,YAAtD,EAAoE,UAApE,CALD,CArLN,EA4LI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,aAA9B;AAA4C,MAAA,QAAQ,EAAEnE,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,aAA3B,EAA0C,KAAK/D,KAAL,CAAWoB,WAArD,EAAkE,UAAlE,CALH,CA5LJ,EAmMM,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,cAA9B;AAA6C,MAAA,EAAE,EAAC,cAAhD;AAA+D,MAAA,QAAQ,EAAEjC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKC,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,cAA3B,EAA2C,KAAK/D,KAAL,CAAWuD,YAAtD,EAAoE,UAApE,CALD,CAnMN,EA0MI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAEpE,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADH,EAEG;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFH,EAGG;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHH,EAIG;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH,EAKG;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALH,CAJF,EAWG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,UAA3B,EAAuC,KAAK/D,KAAL,CAAWqB,QAAlD,EAA4D,UAA5D,CAXH,CA1MJ,EAuNI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAElC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAJF,EAUG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,MAA3B,EAAmC,KAAK/D,KAAL,CAAWsB,IAA9C,EAAoD,UAApD,CAVH,CAvNJ,EAmOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAU,MAAA,SAAS,EAAC,OAApB;AAA4B,MAAA,EAAE,EAAC,aAA/B;AAA6C,MAAA,QAAQ,EAAC,GAAtD;AAA0D,MAAA,IAAI,EAAC,aAA/D;AAA6E,MAAA,IAAI,EAAC,IAAlF;AAAuF,MAAA,IAAI,EAAC,GAA5F;AAAgG,MAAA,QAAQ,EAAEnC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAMG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,aAA3B,EAA0C,KAAK/D,KAAL,CAAWuB,WAArD,EAAkE,UAAlE,CANH,CAnOJ,EA2OK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC;AAAW,MAAA,SAAS,EAAC,OAArB;AAA6B,MAAA,EAAE,EAAC,OAAhC;AAAwC,MAAA,QAAQ,EAAC,GAAjD;AAAqD,MAAA,IAAI,EAAC,OAA1D;AAAkE,MAAA,IAAI,EAAC,IAAvE;AAA4E,MAAA,IAAI,EAAC,GAAjF;AAAqF,MAAA,QAAQ,EAAEpC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAME,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,OAA3B,EAAoC,KAAK/D,KAAL,CAAWwB,KAA/C,EAAsD,UAAtD,CANF,CA3OL,EAmPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnPJ,EAoPK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,QAAQ,EAAErC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKE,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,UAA3B,EAAuC,KAAK/D,KAAL,CAAWyB,QAAlD,EAA4D,UAA5D,CALF,CApPL,EA2PI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,WAA9B;AAA0C,MAAA,QAAQ,EAAEtC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,WAA3B,EAAwC,KAAK/D,KAAL,CAAW2B,SAAnD,EAA8D,UAA9D,CALH,CA3PJ,EAkQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,SAA9B;AAAwC,MAAA,QAAQ,EAAExC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKG,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,SAA3B,EAAsC,KAAK/D,KAAL,CAAW0B,OAAjD,EAA0D,UAA1D,CALH,CAlQJ,EAyQK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAIC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,SAA9B;AAAwC,MAAA,QAAQ,EAAEvC,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,EAKE,KAAKG,aAAL,CAAmByE,OAAnB,CAA2B,SAA3B,EAAsC,KAAK/D,KAAL,CAAW4B,OAAjD,EAA0D,UAA1D,CALF,CAzQL,EAkRI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAuB,MAAA,OAAO,EAAGzC,CAAD,IAAO,KAAKW,UAAL,CAAgBX,CAAhB,CAAvC;AAA2D,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWD,QAAhF;AAA0F,MAAA,SAAS,EAAC,6CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmJ,KAAKC,KAAL,CAAWD,QAAX,GAAsB,eAAtB,GAAwC,QAA3L,CADI,CAlRJ,CAHJ,CADA,CADJ,CADZ,CADQ;AAoSK;;AAta0B;;AAyavC,MAAMsE,eAAe,GAAIrE,KAAD,KAAY;AAChC6D,EAAAA,SAAS,EAAE7D,KAAK,CAACsE,KAAN,CAAY/B;AADS,CAAZ,CAAxB;;AAGA,eAAe5D,OAAO,CAAC0F,eAAD,CAAP,CAAyBtF,cAAzB,CAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport SimpleReactValidator from 'simple-react-validator';\nimport {getAllgames} from './../store/actions/gamesActions';\nimport { connect } from 'react-redux';\nimport $ from \"jquery\";\nimport toastr from \"reactjs-toastr\";\nimport axios from 'axios';\nclass AddTournaments extends Component {\n    constructor(props) {\n        super(props);\n        this.tourValidator = new SimpleReactValidator();\n        this.state = {\n            totalItems: '',\n            sortOrderBy: 'asc',\n            isSubmit: false,\n            pageOfItems: [],\n            tourtitle:'',\n            price:'',\n            exclusive_tournament:'',\n            prize:'',\n            prize_type:'',\n            platform:'',\n            game:'',\n            theme:'',\n            reg_open_date:'',\n            reg_close_date:'',\n            tour_start_date:'',\n            tour_end_date:'',\n            time:'',\n            prizepool:'',\n            prizeone:'',\n            prizetwo:'',\n            prizethree:'',\n            prizeimage:'',\n            reward1name:'',\n            reward2name:'',\n            reward3name:'',\n            reward1image:'',\n            reward2image:'',\n            reward3image:'',\n            brackets:'',\n            type:'',\n            description:'',\n            rules:'',\n            facebook:'',\n            twitter:'',\n            instagram:'',\n            youtube:'',\n            allgames:''\n        };\n    }\n    componentDidMount() {\n        this.props.dispatch(getAllgames());\n    }\n    validateTourForm = (e) => {\n        e.preventDefault();\n\n        let validate = this.tourValidator;\n        if (validate.allValid()) {\n\n        } else {\n            validate.showMessages();\n            this.forceUpdate();\n        }\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allgames: nextProps.gamesdata\n        });\n    }\n    createTour = (e) =>{\n        \n        e.preventDefault();\n        let validate = this.tourValidator;\n        if (validate.allValid()) {\n            this.setState({ isSubmit: true });\n           const{tourtitle,price,exclusive_tournament,prize,prize_type,platform,game,theme,reg_open_date,\n                reg_close_date,tour_start_date,tour_end_date,time,prizepool, prizeone,prizetwo,prizethree,\n                reward1name,reward2name,reward3name,brackets,\n                type,description,rules,facebook,twitter,instagram,youtube} = this.state;\n                let request;\n                let formData = new FormData();\n                formData.append('reward1image', $('#reward1image')[0].files[0]);\n                formData.append('reward2image', $('#reward2image')[0].files[0]);\n                formData.append('reward3image', $('#reward3image')[0].files[0]);\n                formData.append('prizeimage', $('#prizeimage')[0].files[0]);\n                formData.append('tourtitle', tourtitle);\n                formData.append('price', price);\n                formData.append('exclusive_tournament', exclusive_tournament);\n                formData.append('prize', prize);\n                formData.append('prize_type', prize_type);\n                formData.append('platform', platform);\n                formData.append('game', game);\n                formData.append('reg_open_date', reg_open_date);\n                formData.append('reg_close_date', reg_close_date);\n                formData.append('tour_start_date', tour_start_date);\n                formData.append('tour_end_date', tour_end_date);\n                formData.append('time', time);\n                formData.append('prizepool', prizepool);\n                formData.append('prizeone', prizeone);\n                formData.append('prizetwo', prizetwo);\n                formData.append('prizethree', prizethree);\n                formData.append('reward1name', reward1name);\n                formData.append('reward2name', reward2name);\n                formData.append('reward3name', reward3name);\n                formData.append('brackets', brackets);\n                formData.append('type', type);\n                formData.append('description', description);\n                formData.append('rules', rules);\n                formData.append('facebook', facebook);\n                formData.append('twitter', twitter);\n                formData.append('instagram', instagram);\n                formData.append('youtube', youtube);\n                formData.append('theme', theme);\n               request = {\n                method: 'POST',\n                url: `https://xrsports.gg/team/public/user/create-tournament`,\n                headers: { 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` },\n                data: formData\n              };\n            \n            axios(request).then((data) => {\n              if (data.data.ResponseCode === \"1\") {\n                document.getElementById(\"close\").click();\n                toastr.success(data.data.ResponseText, { displayDuration: 1500 })\n                 }else {\n                toastr.error(data.data, { displayDuration: 1500 })\n              }\n            });\n            } else {\n                validate.showMessages();\n                // rerender to show messages for the first time\n                this.forceUpdate();\n            }\n    }\n    render() {\n        return (\n<div className=\"adminright\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                <div className=\"ibox \">\n                    <div className=\"ibox-title\">\n                    </div>\n                    <div className=\"ibox-content\">\n                    <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Title\n                          </FormLabel>\n                          <br/>\n                          <FormControl type=\"text\" id=\"tourtitle\" tabIndex=\"1\" size=\"20\" name=\"tourtitle\" onChange={e => this.validateTourForm(e)} />\n                          {this.tourValidator.message('tourtitle', this.state.tourtitle, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Price</FormLabel>\n                          <br />\n                          <FormControl type=\"text\" id=\"price\" tabIndex=\"1\" size=\"20\" name=\"price\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('price', this.state.price, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Exclusive Tournament</FormLabel>\n                          <br />\n                          <select name=\"exclusive_tournament\" onChange={e => this.validateTourForm(e)}>\n                          <option value=\"\">Exclusive Tournament?</option>\n                            <option value=\"no\">No</option>\n                            <option value=\"yes\">Yes</option>\n                          </select>\n                          {this.tourValidator.message('exclusive_tournament', this.state.exclusive_tournament, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Prize</FormLabel>\n                          <br />\n                          <select name=\"prize\" id=\"tourprize\" onChange={e => this.validateTourForm(e)}>\n                          <option value=\"\">Selwct prize method</option>\n                                <option value=\"cash\">Cash</option>\n                                <option value=\"rewards\">Rewards</option>\n                          </select>\n                          {this.tourValidator.message('prize', this.state.prize, 'required')}\n                        </FormGroup>\n                        <FormGroup id=\"prizetypetag\">\n                          <FormLabel htmlFor=\"title\">Prize type</FormLabel>\n                          <br />\n                          <select name=\"prize_type\" id=\"prize_type\" onChange={e => this.validateTourForm(e)}>\n                                 <option value=\"\">prize type</option>\n                                <option value=\"merch\">Merch</option>\n                                <option value=\"shoes\">Shoes</option>\n                                <option value=\"freesize\">Free size</option>\n                          </select>\n                          {this.tourValidator.message('prize_type', this.state.prize_type, 'required')}\n                        </FormGroup>\n                        {/* <p>\n                          <FormLabel htmlFor=\"title\">Sponsor Name</FormLabel>\n                          <br />\n                          <FormControl type=\"text\" id=\"sponsorname\" tabIndex=\"1\" size=\"20\" name=\"sponsorname\" onChange={e => this.validateTourForm(e)}/>\n                        </p>\n                        <p>\n                          <FormLabel htmlFor=\"title\">Sponsor Image</FormLabel>\n                          <br />\n                          <FormControl type=\"file\" id=\"sponsorimage\" tabIndex=\"1\" size=\"20\" name=\"sponsorimage\"onChange={e => this.validateTourForm(e)} />\n                        </p> */}\n                       \n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Platfrom</FormLabel>\n                          <br />\n                          <select name=\"platform\" onChange={e => this.validateTourForm(e)}>\n                            <option value=\"ps4\">PlayStation 4</option>\n                            <option value=\"xbox\">XBOX</option>\n                            <option value=\"pc\">PC</option>\n                          </select>\n                          {this.tourValidator.message('platform', this.state.platform, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Game\n                          </FormLabel>\n                          <br />\n                          <select name=\"game\" onChange={e => this.validateTourForm(e)}>\n                              <option>Choose Game</option>\n                              { this.state.allgames.length > 0?this.state.allgames.map((post) => (\n                                                        <option value={post.game_name} key={post.game_name}>{post.game_title}</option>\n                                                        )):''}\n                              \n                          </select>\n                          {this.tourValidator.message('game', this.state.game, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Theme\n                          </FormLabel>\n                          <br />\n                          <select name=\"theme\" onChange={e => this.validateTourForm(e)}>\n                                <option>Choose a Theme</option>\n                                <option value=\"dark\">Dark</option>\n                                <option>Light</option>\n                          </select>\n                          {this.tourValidator.message('theme', this.state.theme, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Registeration Start Date\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"date\" id=\"reg_open_date\"   required pattern=\"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\" name=\"reg_open_date\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reg_open_date', this.state.reg_open_date, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Registeration Close Date\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"date\" id=\"reg_close_date\" required pattern=\"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\"  name=\"reg_close_date\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reg_close_date', this.state.reg_close_date, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Start Date\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"date\" id=\"tour_start_date\" required pattern=\"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\"  name=\"tour_start_date\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('tour_start_date', this.state.tour_start_date, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Close Date\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"date\" id=\"tour_end_date\" required pattern=\"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\"  name=\"tour_end_date\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('tour_end_date', this.state.tour_end_date, 'required')}\n                        </FormGroup>\n                         <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament Start Time\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"time\" id=\"time\" required pattern=\"(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])/(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])/(?:30))|(?:(?:0[13578]|1[02])-31))\"  name=\"time\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('time', this.state.time, 'required')}\n                        </FormGroup>\n                        <FormGroup  id=\"prizepool\">\n                          <FormLabel htmlFor=\"title\">prize pool\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"prizepool\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('prizepool', this.state.prizepool, 'required')}\n                        </FormGroup>\n                        <FormGroup  id=\"firstprizee\">\n                          <FormLabel htmlFor=\"title\">First prize\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"prizeone\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('prizeone', this.state.prizeone, 'required')}\n                        </FormGroup>\n                        <FormGroup  id=\"secondprize\">\n                          <FormLabel htmlFor=\"title\">Second prize\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"prizetwo\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('prizetwo', this.state.prizetwo, 'required')}\n                        </FormGroup>\n                        <FormGroup  id=\"thirddprize\">\n                          <FormLabel htmlFor=\"title\">Third prize\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"prizethree\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('prizethree', this.state.prizethree, 'required')}\n                        </FormGroup>\n                        <FormGroup  id=\"prizethumb\">\n                          <FormLabel htmlFor=\"title\">Prize Image\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"file\" name=\"prizeimage\" id=\"prizeimage\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('prizeimage', this.state.prizeimage, 'required')}\n                        </FormGroup>\n                        <FormGroup id=\"rew1name\">\n                          <FormLabel htmlFor=\"title\">Reward for 1st Player\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"reward1name\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reward1name', this.state.reward1name, 'required')}\n                        </FormGroup>\n                          <FormGroup id=\"rew1image\">\n                          <FormLabel htmlFor=\"title\">Reward 1st Image\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"file\" name=\"reward1image\" id=\"reward1image\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reward1image', this.state.reward1image, 'required')}\n                        </FormGroup>\n                         <FormGroup id=\"rew2name\">\n                          <FormLabel htmlFor=\"title\">Reward for 2nd Player\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"reward2name\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reward2name', this.state.reward2name, 'required')}\n                        </FormGroup>\n                          <FormGroup id=\"rew2image\">\n                          <FormLabel htmlFor=\"title\">Reward 2nd Image\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"file\" name=\"reward2image\" id=\"reward2image\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reward2image', this.state.reward2image, 'required')}\n                        </FormGroup>\n                        <FormGroup id=\"rew3name\">\n                          <FormLabel htmlFor=\"title\">Reward for 3rd Player\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"reward3name\" onChange={e => this.validateTourForm(e)} />\n                          {this.tourValidator.message('reward3name', this.state.reward3name, 'required')}\n                        </FormGroup>\n                          <FormGroup id=\"rew3image\">\n                          <FormLabel htmlFor=\"title\">Reward 3rd Image\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"file\" name=\"reward3image\" id=\"reward3image\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('reward3image', this.state.reward3image, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Total Players\n                          </FormLabel>\n                          <br />\n                          <select name=\"brackets\" onChange={e => this.validateTourForm(e)}>\n                             <option value=\"4\">4</option>\n                             <option value=\"8\">8</option>\n                             <option value=\"16\">16</option>\n                             <option value=\"32\">32</option>\n                             <option value=\"64\">64</option>\n                          </select>\n                          {this.tourValidator.message('brackets', this.state.brackets, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"title\">Tournament type\n                          </FormLabel>\n                          <br />\n                          <select name=\"type\" onChange={e => this.validateTourForm(e)}>\n                            <option value=\"single\">Single Elimination\n                            </option>\n                            <option value=\"double\">Double Elimination\n                            </option>\n                          </select>\n                          {this.tourValidator.message('type', this.state.type, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"description\">Tournament Description\n                          </FormLabel>\n                          <br />\n                          <textarea className=\"w-100\" id=\"description\" tabIndex=\"3\" name=\"description\" cols=\"50\" rows=\"6\" onChange={e => this.validateTourForm(e)}>\n                          </textarea>\n                          {this.tourValidator.message('description', this.state.description, 'required')}\n                        </FormGroup>\n                         <FormGroup>\n                          <FormLabel htmlFor=\"rules\">Tournament Rules\n                          </FormLabel>\n                          <br />\n                          <textarea  className=\"w-100\" id=\"rules\" tabIndex=\"3\" name=\"rules\" cols=\"50\" rows=\"6\" onChange={e => this.validateTourForm(e)}>\n                          </textarea>\n                          {this.tourValidator.message('rules', this.state.rules, 'required')}\n                        </FormGroup>\n                        <h3>Social Media Links</h3>\n                         <FormGroup>\n                          <FormLabel htmlFor=\"fb\">Facebook\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"facebook\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('facebook', this.state.facebook, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"insta\">Instagram\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"instagram\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('instagram', this.state.instagram, 'required')}\n                        </FormGroup>\n                        <FormGroup>\n                          <FormLabel htmlFor=\"twitter\">Twitter\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"twitter\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('twitter', this.state.twitter, 'required')}\n                        </FormGroup>\n                         <FormGroup>\n                          <FormLabel htmlFor=\"youtube\">Youtube\n                          </FormLabel>\n                          <br />\n                          <FormControl type=\"text\" name=\"youtube\" onChange={e => this.validateTourForm(e)}/>\n                          {this.tourValidator.message('youtube', this.state.youtube, 'required')}\n                        </FormGroup>\n                    \n                        {/* <button type=\"submit\"  onClick={(e) => this.createTour(e)}  className=\"btn btn-red btn-block btn-lg profilebuttons\">CREATE</button> */}\n                        <div className=\"text-center wrapper\">\n                    <button type=\"submit\"  onClick={(e) => this.createTour(e)} disabled={this.state.isSubmit} className=\"btn btn-red btn-block btn-lg profilebuttons\">{this.state.isSubmit ? 'PLEASE WAIT..' : 'CREATE'}</button>\n            </div>\n                       \n\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n                );\n            }\n        }\n       \nconst mapStateToProps = (state) => ({\n    gamesdata: state.games.data,\n})\nexport default connect(mapStateToProps)(AddTournaments);"]},"metadata":{},"sourceType":"module"}