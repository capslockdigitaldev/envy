{"ast":null,"code":"var _jsxFileName = \"/home/capslock/team_envy/src/components/login.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateLoginForm = e => {\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {// console.log(this.state);\n      } else {\n        validate.showMessages(); // rerender to show messages for the first time\n\n        this.forceUpdate();\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      e.preventDefault();\n    };\n\n    this.loginForm = e => {\n      e.preventDefault(); // toast.dismiss();\n\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {\n        this.setState({\n          isSubmit: true\n        });\n        const _this$state = this.state,\n              email = _this$state.email,\n              password = _this$state.password;\n        const request = new Request('https://pbx.cap-tek.com:8080/admin/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email,\n            password\n          }),\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          })\n        });\n        return fetch(request).then(res => res.json()).then(data => {\n          if (data.token) {\n            localStorage.setItem('token', data.token);\n            this.props.history.push('/dashboard');\n          } else {\n            this.setState({\n              isSubmit: false\n            }); // toast.error(data.error, alertOptions);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        validate.showMessages(); // rerender to show messages for the first time\n\n        this.forceUpdate();\n      }\n    };\n\n    this.loginValidator = new SimpleReactValidator();\n    this.state = {\n      email: '',\n      password: '',\n      isSubmit: false\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('token')) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-body-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 login-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lg-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"V3M\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\"), React.createElement(\"a\", {\n      href: \"\",\n      className: \"btn btn-gray btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Support\"))), React.createElement(\"div\", {\n      className: \"login-main-content col-md-8 pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/assets/img/logo_inner.png\",\n      alt: \"logo\",\n      className: \"logo-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"login-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Please login with your user information.\")), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter Your Email\",\n      value: this.state.email,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), this.loginValidator.message('email', this.state.email, 'required|email')), React.createElement(FormGroup, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"password\",\n      placeholder: \"******\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.loginValidator.message('password', this.state.password, 'required|alpha_num')), React.createElement(\"div\", {\n      className: \"form-group row login-tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-6 login-remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"log-body-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Remember me\"))), React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-6 login-forgot-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Forgot Password?\"))), React.createElement(\"div\", {\n      className: \"form-group login-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => this.loginForm(e),\n      disabled: this.state.isSubmit,\n      className: \"btn btn-red btn-block btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.isSubmit ? 'Please wait' : 'Login')), React.createElement(\"div\", {\n      className: \"form-group login-signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      className: \"btn btn-red btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Create A New Account\")), React.createElement(\"label\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default connect()(login);","map":{"version":3,"sources":["/home/capslock/team_envy/src/components/login.jsx"],"names":["React","Component","connect","SimpleReactValidator","FormGroup","FormControl","Link","login","constructor","props","validateLoginForm","e","validate","loginValidator","allValid","showMessages","forceUpdate","setState","target","name","value","preventDefault","loginForm","isSubmit","state","email","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","data","token","localStorage","setItem","history","push","catch","err","console","log","componentDidMount","getItem","render","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,iBAjBmB,GAiBEC,CAAD,IAAO;AACvB,UAAIC,QAAQ,GAAG,KAAKC,cAApB;;AACA,UAAID,QAAQ,CAACE,QAAT,EAAJ,EAAyB,CACrB;AAEH,OAHD,MAGO;AACHF,QAAAA,QAAQ,CAACG,YAAT,GADG,CAEH;;AACA,aAAKC,WAAL;AACH;;AACD,WAAKC,QAAL,CAAc;AAAE,SAACN,CAAC,CAACO,MAAF,CAASC,IAAV,GAAiBR,CAAC,CAACO,MAAF,CAASE;AAA5B,OAAd;AACAT,MAAAA,CAAC,CAACU,cAAF;AACH,KA7BkB;;AAAA,SA+BnBC,SA/BmB,GA+BNX,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACU,cAAF,GADe,CAEf;;AACA,UAAIT,QAAQ,GAAG,KAAKC,cAApB;;AACA,UAAID,QAAQ,CAACE,QAAT,EAAJ,EAAyB;AACrB,aAAKG,QAAL,CAAc;AAAEM,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AADqB,4BAEO,KAAKC,KAFZ;AAAA,cAEbC,KAFa,eAEbA,KAFa;AAAA,cAENC,QAFM,eAENA,QAFM;AAGrB,cAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,0CAAZ,EAAwD;AACpEC,UAAAA,MAAM,EAAE,MAD4D;AAEpEC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,YAAAA,KAAF;AAASC,YAAAA;AAAT,WAAf,CAF8D;AAGpEO,UAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,4BAAgB;AAAlB,WAAZ;AAH2D,SAAxD,CAAhB;AAKA,eAAOC,KAAK,CAACR,OAAD,CAAL,CAAeS,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,EACFF,IADE,CACIG,IAAD,IAAU;AACZ,cAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,YAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC;AACA,iBAAK/B,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,WAHD,MAGO;AACH,iBAAK3B,QAAL,CAAc;AAAEM,cAAAA,QAAQ,EAAE;AAAZ,aAAd,EADG,CAEH;AACH;AACJ,SATE,EASAsB,KATA,CASOC,GAAD,IAAS;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAXE,CAAP;AAaH,OArBD,MAqBO;AACHlC,QAAAA,QAAQ,CAACG,YAAT,GADG,CAEH;;AACA,aAAKC,WAAL;AACH;AAEJ,KA9DkB;;AAEf,SAAKH,cAAL,GAAsB,IAAIV,oBAAJ,EAAtB;AACA,SAAKqB,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTH,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAED0B,EAAAA,iBAAiB,GAAG;AAChB,QAAIR,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,WAAKzC,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH;AACJ;;AAkDDO,EAAAA,MAAM,GAAG;AACL,WAEI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kKAFJ,EAGI;AAAG,MAAA,IAAI,EAAC,EAAR;AAAW,MAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,4BAAT;AAAsC,MAAA,GAAG,EAAC,MAA1C;AAAiD,MAAA,SAAS,EAAC,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,IAAI,EAAC,OAA9B;AAAsC,MAAA,WAAW,EAAC,kBAAlD;AAAqE,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWC,KAAvF;AAA8F,MAAA,QAAQ,EAAEd,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKE,cAAL,CAAoBuC,OAApB,CAA4B,OAA5B,EAAqC,KAAK5B,KAAL,CAAWC,KAAhD,EAAuD,gBAAvD,CAFL,CADJ,EAMI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,WAAW,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC,UAAvD;AAAkE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,QAApF;AAA8F,MAAA,QAAQ,EAAEf,CAAC,IAAI,KAAKD,iBAAL,CAAuBC,CAAvB,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKE,cAAL,CAAoBuC,OAApB,CAA4B,UAA5B,EAAwC,KAAK5B,KAAL,CAAWE,QAAnD,EAA6D,oBAA7D,CAFL,CANJ,EAUI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0D;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA1D,CAPJ,CAVJ,EAoBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGf,CAAD,IAAO,KAAKW,SAAL,CAAeX,CAAf,CAAtC;AAAyD,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWD,QAA9E;AAAwF,MAAA,SAAS,EAAC,8BAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkI,KAAKC,KAAL,CAAWD,QAAX,GAAsB,aAAtB,GAAsC,OAAxK,CADJ,CApBJ,EAuBI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,SAAS,EAAC,uBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADkB,CAvBJ,EA0BI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ,CADJ,CALJ,CADJ,CADJ,CARJ,CAFJ;AAqDH;;AAvHyB;;AA0H9B,eAAerB,OAAO,GAAGK,KAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { FormGroup, FormControl } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.loginValidator = new SimpleReactValidator();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            isSubmit: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('token')) {\r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n\r\n    validateLoginForm = (e) => {\r\n        let validate = this.loginValidator;\r\n        if (validate.allValid()) {\r\n            // console.log(this.state);\r\n\r\n        } else {\r\n            validate.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        e.preventDefault();\r\n    }\r\n\r\n    loginForm = (e) => {\r\n        e.preventDefault();\r\n        // toast.dismiss();\r\n        let validate = this.loginValidator;\r\n        if (validate.allValid()) {\r\n            this.setState({ isSubmit: true });\r\n            const { email, password } = this.state;\r\n            const request = new Request('https://pbx.cap-tek.com:8080/admin/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ email, password }),\r\n                headers: new Headers({ 'Content-Type': 'application/json' }),\r\n            })\r\n            return fetch(request).then(res => res.json())\r\n                .then((data) => {\r\n                    if (data.token) {\r\n                        localStorage.setItem('token', data.token);\r\n                        this.props.history.push('/dashboard')\r\n                    } else {\r\n                        this.setState({ isSubmit: false });\r\n                        // toast.error(data.error, alertOptions);\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n\r\n        } else {\r\n            validate.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"login-body-content\">\r\n                <div className=\"col-md-4 login-left\">\r\n                    <div className=\"lg-content\">\r\n                        <h2>V3M</h2>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</p>\r\n                        <a href=\"\" className=\"btn btn-gray btn-lg btn-block\">Support</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-main-content col-md-8 pull-right\">\r\n                    <div className=\"login-container\">\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <img src=\"/assets/img/logo_inner.png\" alt=\"logo\" className=\"logo-img\" />\r\n                                <span className=\"login-description\">Please login with your user information.</span>\r\n                            </div>\r\n                            <div className=\"panel-body\">\r\n                                <form>\r\n                                    <FormGroup controlId=\"username\">\r\n                                        <FormControl type=\"text\" name=\"email\" placeholder=\"Enter Your Email\" value={this.state.email} onChange={e => this.validateLoginForm(e)} />\r\n                                        {this.loginValidator.message('email', this.state.email, 'required|email')}\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup controlId=\"password\" >\r\n                                        <FormControl type=\"password\" placeholder=\"******\" name=\"password\" value={this.state.password} onChange={e => this.validateLoginForm(e)} />\r\n                                        {this.loginValidator.message('password', this.state.password, 'required|alpha_num')}\r\n                                    </FormGroup>\r\n                                    <div className=\"form-group row login-tools\">\r\n                                        <div className=\"col-xs-12 col-sm-6 login-remember\">\r\n                                            <div className=\"log-body-checkbox\">\r\n                                                <input type=\"checkbox\" id=\"remember\" />\r\n                                                <label htmlFor=\"remember\">Remember me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-xs-12 col-sm-6 login-forgot-password\"><a href=\"#\">Forgot Password?</a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group login-submit\">\r\n                                        <button type=\"submit\" onClick={(e) => this.loginForm(e)} disabled={this.state.isSubmit} className=\"btn btn-red btn-block btn-lg\">{this.state.isSubmit ? 'Please wait' : 'Login'}</button>\r\n                                    </div>\r\n                                    <div className=\"form-group login-signup\">\r\n                  <Link to=\"/signup\" className=\"btn btn-red btn-block\">Create A New Account</Link>\r\n                </div>\r\n                                    <label className=\"text-danger\"></label>\r\n                                </form>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(login);"]},"metadata":{},"sourceType":"module"}