{"ast":null,"code":"import * as actionTypes from '../types/types';\nimport { apiBaseUrl } from '../helpers/common';\nimport { handleResponse } from '../helpers/userServices';\nexport const fetchStart = () => {\n  return {\n    type: actionTypes.FETCH_DATA_BEGIN\n  };\n};\nexport const fetchDataSuccess = data => {\n  return {\n    type: actionTypes.FETCH_DATA_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchDataActiveMatchesSuccess = data => {\n  return {\n    type: actionTypes.FETCH_DATA_ACTIVE_MATCHES_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchMatchSuccess = data => {\n  return {\n    type: actionTypes.FETCH_MATCH_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchMatchByIdSuccess = data => {\n  return {\n    type: actionTypes.FETCH_MATCH_BY_ID_SUCCESS,\n    payload: data.data\n  };\n};\nexport function allMatch() {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/get-matches`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchDataSuccess(data));\n    });\n  };\n}\nexport function allActiveMatch() {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/get-active-matches`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchDataActiveMatchesSuccess(data));\n    });\n  };\n}\nexport function getSpecificMatches(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/get-specific-matches/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchMatchSuccess(data));\n    });\n  };\n}\nexport function getMatcheByid(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/matchbyid/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchMatchByIdSuccess(data));\n    });\n  };\n}","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/store/actions/matchActions.js"],"names":["actionTypes","apiBaseUrl","handleResponse","fetchStart","type","FETCH_DATA_BEGIN","fetchDataSuccess","data","FETCH_DATA_SUCCESS","payload","fetchDataActiveMatchesSuccess","FETCH_DATA_ACTIVE_MATCHES_SUCCESS","fetchMatchSuccess","FETCH_MATCH_SUCCESS","fetchMatchByIdSuccess","FETCH_MATCH_BY_ID_SUCCESS","allMatch","dispatch","request","Request","method","headers","Headers","fetch","then","allActiveMatch","getSpecificMatches","id","getMatcheByid"],"mappings":"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","sourcesContent":["import * as actionTypes from '../types/types';\r\nimport {apiBaseUrl} from '../helpers/common';\r\nimport {handleResponse} from '../helpers/userServices';\r\n\r\nexport const fetchStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_BEGIN\r\n    }\r\n}\r\n\r\nexport const fetchDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchDataActiveMatchesSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_ACTIVE_MATCHES_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchMatchSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_MATCH_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport const fetchMatchByIdSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_MATCH_BY_ID_SUCCESS,\r\n        payload: data.data\r\n    }\r\n}\r\nexport function allMatch() {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/get-matches`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchDataSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function allActiveMatch() {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/get-active-matches`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchDataActiveMatchesSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function getSpecificMatches(id) {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/get-specific-matches/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchMatchSuccess(data))\r\n        });\r\n    }\r\n}\r\nexport function getMatcheByid(id) {\r\n    return dispatch => {\r\n        dispatch(fetchStart());\r\n        const request = new Request(`${apiBaseUrl}/matchbyid/${id}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n        return fetch(request).then(handleResponse).then((data) => {\r\n            dispatch(fetchMatchByIdSuccess(data))\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}