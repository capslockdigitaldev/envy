{"ast":null,"code":"import { apiBaseUrl } from '../helpers/common';\nimport * as actionTypes from '../types/types';\nimport { handleResponse } from '../helpers/userServices';\nexport const fetchStart = () => {\n  return {\n    type: actionTypes.FETCH_EVENTS_BEGIN\n  };\n};\nexport const fetcheventSuccess = data => {\n  return {\n    type: actionTypes.FETCH_EVENT_SUCCESS,\n    payload: data.data\n  };\n};\nexport const fetchsingleeventSuccess = data => {\n  return {\n    type: actionTypes.FETCH_SINGLE_EVENT_SUCCESS,\n    payload: data.data\n  };\n};\nexport function getAllevents() {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/get-events`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetcheventSuccess(data));\n    });\n  };\n}\nexport function getSingleevents(id) {\n  return dispatch => {\n    dispatch(fetchStart());\n    const request = new Request(`${apiBaseUrl}/get-single-event/${id}`, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(handleResponse).then(data => {\n      dispatch(fetchsingleeventSuccess(data));\n    });\n  };\n}","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/store/actions/eventsActions.js"],"names":["apiBaseUrl","actionTypes","handleResponse","fetchStart","type","FETCH_EVENTS_BEGIN","fetcheventSuccess","data","FETCH_EVENT_SUCCESS","payload","fetchsingleeventSuccess","FETCH_SINGLE_EVENT_SUCCESS","getAllevents","dispatch","request","Request","method","headers","Headers","fetch","then","getSingleevents","id"],"mappings":"AAAA,SAASA,UAAT,QAA0B,mBAA1B;AACA,OAAO,KAAKC,WAAZ,MAA6B,gBAA7B;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACO,mBADf;AAEHC,IAAAA,OAAO,EAAEF,IAAI,CAACA;AAFX,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,uBAAuB,GAAIH,IAAD,IAAU;AAC7C,SAAO;AACHH,IAAAA,IAAI,EAAEH,WAAW,CAACU,0BADf;AAEHF,IAAAA,OAAO,EAAEF,IAAI,CAACA;AAFX,GAAP;AAIH,CALM;AAMP,OAAO,SAASK,YAAT,GAAwB;AAC3B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACA,UAAMW,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEf,UAAW,aAA1B,EAAwC;AACpDgB,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ;AAF2C,KAAxC,CAAhB;AAIA,WAAOC,KAAK,CAACL,OAAD,CAAL,CAAeM,IAAf,CAAoBlB,cAApB,EAAoCkB,IAApC,CAA0Cb,IAAD,IAAU;AACtDM,MAAAA,QAAQ,CAACP,iBAAiB,CAACC,IAAD,CAAlB,CAAR;AACH,KAFM,CAAP;AAGH,GATD;AAUH;AACD,OAAO,SAASc,eAAT,CAAyBC,EAAzB,EAA6B;AAChC,SAAOT,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACA,UAAMW,OAAO,GAAG,IAAIC,OAAJ,CAAa,GAAEf,UAAW,qBAAoBsB,EAAG,EAAjD,EAAoD;AAChEN,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ;AAFuD,KAApD,CAAhB;AAIA,WAAOC,KAAK,CAACL,OAAD,CAAL,CAAeM,IAAf,CAAoBlB,cAApB,EAAoCkB,IAApC,CAA0Cb,IAAD,IAAU;AACtDM,MAAAA,QAAQ,CAACH,uBAAuB,CAACH,IAAD,CAAxB,CAAR;AACH,KAFM,CAAP;AAGH,GATD;AAUH","sourcesContent":["import { apiBaseUrl} from '../helpers/common';\nimport * as actionTypes from '../types/types';\nimport {handleResponse} from '../helpers/userServices';\n\n\nexport const fetchStart = () => {\n    return {\n        type: actionTypes.FETCH_EVENTS_BEGIN\n    }\n}\n\nexport const fetcheventSuccess = (data) => {\n    return {\n        type: actionTypes.FETCH_EVENT_SUCCESS,\n        payload: data.data\n    }\n}\nexport const fetchsingleeventSuccess = (data) => {\n    return {\n        type: actionTypes.FETCH_SINGLE_EVENT_SUCCESS,\n        payload: data.data\n    }\n}\nexport function getAllevents() {\n    return dispatch => {\n        dispatch(fetchStart());\n        const request = new Request(`${apiBaseUrl}/get-events`, {\n            method: 'GET',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request).then(handleResponse).then((data) => {\n            dispatch(fetcheventSuccess(data))\n        });\n    }\n}\nexport function getSingleevents(id) {\n    return dispatch => {\n        dispatch(fetchStart());\n        const request = new Request(`${apiBaseUrl}/get-single-event/${id}`, {\n            method: 'GET',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        return fetch(request).then(handleResponse).then((data) => {\n            dispatch(fetchsingleeventSuccess(data))\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}