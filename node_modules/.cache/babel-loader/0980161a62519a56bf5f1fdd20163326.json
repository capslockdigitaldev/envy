{"ast":null,"code":"var _jsxFileName = \"/home/capslock/Downloads/envy/src/components/Login.jsx\";\nimport React, { Component } from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { withRouter } from 'react-router';\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport Blizzard from './Blizzard';\nimport parseJwt from './../store/helpers/common';\nimport axios from 'axios';\n\nconst qs = require('query-string');\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateLoginForm = e => {\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {} else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      e.preventDefault();\n    };\n\n    this.loginForm = e => {\n      e.preventDefault();\n      let validate = this.loginValidator;\n\n      if (validate.allValid()) {\n        this.setState({\n          isSubmit: true\n        });\n        const _this$state = this.state,\n              email = _this$state.email,\n              password = _this$state.password;\n        const request = new Request('https://xrsports.gg/team/public/user/login', {\n          method: 'POST',\n          body: JSON.stringify({\n            email,\n            password\n          }),\n          headers: new Headers({\n            'Content-Type': 'application/json'\n          })\n        });\n        return fetch(request).then(res => res.json()).then(data => {\n          if (data.token) {\n            localStorage.setItem('token', data.token);\n            this.setState({\n              isSubmit: true,\n              loggedIn: true\n            });\n            const currdetails = parseJwt(localStorage.getItem('token'));\n            const role = currdetails.rol;\n\n            if (role === 'user') {\n              this.props.history.push('/games'); // document.getElementById(\"close\").click();\n\n              window.location.reload();\n            } else {\n              this.props.history.push('/admin-transactions'); // document.getElementById(\"close\").click();\n\n              window.location.reload();\n            }\n\n            window.location.reload();\n          } else {\n            this.setState({\n              isSubmit: false,\n              loggedIn: false\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n    };\n\n    this.loginWithBlizzard = () => {\n      console.log(\"loginWithBlizzard\"); // let request;\n      // // https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=https:%2F%2Fteamenvy.herokuapp.com%2F&response_type=code                    let request;\n      //             const params = {\n      //                 response_type:'code',\n      //                 client_id:'2551880e979642db877151662e7d6742',\n      //                 redirect_uri: 'https://teamenvy.herokuapp.com/',\n      //                 access_type:\"online\"\n      //             }\n      //     request = {\n      //         method: 'GET',\n      //         url: `https://us.battle.net/oauth/authorize`,\n      //         params: params\n      //       };\n      //     axios(request).then( (response) => {\n      //         console.log(response)\n      //     //   this.setState({\n      //     //     token: response.data,\n      //     //   });\n      //     })\n      //     .catch( (error) => {\n      //       console.log(error);\n      //     });\n\n      const postData = {\n        client_id: \"2551880e979642db877151662e7d6742\",\n        client_secret: \"ypSSMqrvq2aHRwtjxD1GWCUWYvPdm7ge\",\n        grant_type: \"authorization_code\",\n        code: \"USDNTFVDYP7BGH3UNYODAKRC53N29I9TS4\",\n        redirect_uri: \"https://teamenvy.herokuapp.com/games\"\n      };\n      const axiosConfig = {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      };\n      const url = \"https://us.battle.net/oauth/token\";\n      axios.post(url, qs.stringify(postData), axiosConfig).then(res => {\n        console.log(\"res\", res); // const tokenData = {\n        //   client_id: \"react-test-client\",\n        //   grant_type: \"refresh_token\",\n        //   refresh_token: res && res.data.refresh_token\n        // }\n        // axios.post(url, qs.stringify(tokenData), axiosConfig).then(response =>{\n        //   localStorage.setItem(\"access_token\", res && res.data.access_token)\n        //   this.checkAuth();\n        //   // this.props.history.push('/XrayDetails');\n        // }).catch(error => {\n        //   alert(\"Something went wrong, Please try again\")\n        // })\n      }).catch(err => {\n        console.log(\"err\", err); // alert(\"Something went wrong, Please try again\")\n      });\n    };\n\n    this.loginValidator = new SimpleReactValidator();\n    this.state = {\n      email: '',\n      password: '',\n      isSubmit: false,\n      loggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('token')) {\n      this.setState({\n        loggedIn: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"modal-container-464146\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"myModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      id: \"close\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login modal-dialog\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Blizzard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login modal-header text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"modal-titl text-center w-100\",\n      id: \"myModalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"LOGIN\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => this.loginWithBlizzard(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Login with blizzard\"), React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" \", React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=https:%2F%2Fteamenvy.herokuapp.com%2F&response_type=code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \" Login Heroku\")), React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" \", React.createElement(\"a\", {\n      target: \"_blank\",\n      href: \"https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=http:%2F%2Flocalhost:3000%2F&response_type=code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" Login localhost\")), React.createElement(FormGroup, {\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"E-MAIL\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter Your Email\",\n      value: this.state.email,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), this.loginValidator.message('email', this.state.email, 'required|email')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"PASSWORD\"), React.createElement(FormControl, {\n      type: \"password\",\n      placeholder: \"******\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.validateLoginForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), this.loginValidator.message('password', this.state.password, 'required|alpha_num')), React.createElement(\"label\", {\n      className: \"text-center w-100 py-3 mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"rememberme\",\n      type: \"checkbox\",\n      id: \"rememberme\",\n      value: \"forever\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \" Remember Me\"), React.createElement(\"div\", {\n      className: \"form-group text-center mt-0 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"By clicking below, you accept to our and \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Terms of Use\"), \" and \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Privacy Policy\"))), React.createElement(\"div\", {\n      className: \"text-center wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => this.loginForm(e),\n      disabled: this.state.isSubmit,\n      className: \"btn btn-red btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.isSubmit ? 'PLEASE WAIT..' : 'LOGIN')))), React.createElement(\"div\", {\n      className: \"form-group text-center footer login_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" Forgot Password?\"), React.createElement(\"div\", {\n      className: \"form-group text-center mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Don't have an account  \", React.createElement(\"a\", {\n      className: \"\",\n      id: \"modal-509828\",\n      href: \"#modal-container-509828\",\n      role: \"button\",\n      \"data-toggle\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"REGISTER\")))))))));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/components/Login.jsx"],"names":["React","Component","SimpleReactValidator","withRouter","FormGroup","FormControl","Blizzard","parseJwt","axios","qs","require","Login","constructor","props","validateLoginForm","e","validate","loginValidator","allValid","showMessages","forceUpdate","setState","target","name","value","preventDefault","loginForm","isSubmit","state","email","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","data","token","localStorage","setItem","loggedIn","currdetails","getItem","role","rol","history","push","window","location","reload","catch","err","console","log","loginWithBlizzard","postData","client_id","client_secret","grant_type","code","redirect_uri","axiosConfig","url","post","componentDidMount","render","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { withRouter } from 'react-router'\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport Blizzard from './Blizzard';\nimport parseJwt from './../store/helpers/common';\nimport axios from 'axios';\nconst qs = require('query-string');\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.loginValidator = new SimpleReactValidator();\n        this.state = {\n            email: '',\n            password: '',\n            isSubmit: false,\n            loggedIn: false,\n        }\n    }\n    componentDidMount() {\n        if (localStorage.getItem('token')) {\n            this.setState({ loggedIn: true });\n        }\n    }\n\n    validateLoginForm = (e) => {\n        let validate = this.loginValidator;\n        if (validate.allValid()) {\n\n        } else {\n            validate.showMessages();\n            this.forceUpdate();\n        }\n        this.setState({ [e.target.name]: e.target.value });\n        e.preventDefault();\n    }\n\n\n\n    loginForm = (e) => {\n        e.preventDefault();\n        let validate = this.loginValidator;\n        if (validate.allValid()) {\n            this.setState({ isSubmit: true });\n            const { email, password } = this.state;\n            const request = new Request('https://xrsports.gg/team/public/user/login', {\n                method: 'POST',\n                body: JSON.stringify({ email, password }),\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n            })\n            return fetch(request).then(res => res.json())\n                .then((data) => {\n                    if (data.token) {\n                        localStorage.setItem('token', data.token);\n                        this.setState({ isSubmit: true , loggedIn: true});\n                        const currdetails = parseJwt(localStorage.getItem('token'));\n                        const role = currdetails.rol;\n                        if(role === 'user'){\n                            this.props.history.push('/games');\n                            // document.getElementById(\"close\").click();\n                            window.location.reload();\n                        }else{\n                            this.props.history.push('/admin-transactions');\n                            // document.getElementById(\"close\").click();\n                            window.location.reload();\n                        }\n                        window.location.reload();\n                       \n                    } else {\n                        this.setState({ isSubmit: false , loggedIn: false});\n                    }\n                }).catch((err) => {\n                    console.log(err)\n                })\n\n        } else {\n            validate.showMessages();\n            this.forceUpdate();\n        }\n\n    }\n\n    loginWithBlizzard = () =>{\n        console.log(\"loginWithBlizzard\");\n        // let request;\n        // // https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=https:%2F%2Fteamenvy.herokuapp.com%2F&response_type=code                    let request;\n        //             const params = {\n        //                 response_type:'code',\n        //                 client_id:'2551880e979642db877151662e7d6742',\n        //                 redirect_uri: 'https://teamenvy.herokuapp.com/',\n        //                 access_type:\"online\"\n                        \n        //             }\n        //     request = {\n        //         method: 'GET',\n        //         url: `https://us.battle.net/oauth/authorize`,\n        //         params: params\n        //       };\n        //     axios(request).then( (response) => {\n        //         console.log(response)\n        //     //   this.setState({\n        //     //     token: response.data,\n        //     //   });\n        //     })\n        //     .catch( (error) => {\n        //       console.log(error);\n        //     });\n           \n            const postData = {\n                client_id:\"2551880e979642db877151662e7d6742\",\n                client_secret:\"ypSSMqrvq2aHRwtjxD1GWCUWYvPdm7ge\",\n                grant_type:\"authorization_code\",\n                code:\"USDNTFVDYP7BGH3UNYODAKRC53N29I9TS4\",\n                redirect_uri:\"https://teamenvy.herokuapp.com/games\"\n              };\n              const axiosConfig = {\n                headers: {\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                }\n              };\n              const url =\n                \"https://us.battle.net/oauth/token\";\n              axios.post(url, qs.stringify(postData), axiosConfig).then(res => {\n                  console.log(\"res\", res);\n                // const tokenData = {\n                //   client_id: \"react-test-client\",\n                //   grant_type: \"refresh_token\",\n                //   refresh_token: res && res.data.refresh_token\n                // }\n          \n                // axios.post(url, qs.stringify(tokenData), axiosConfig).then(response =>{\n                //   localStorage.setItem(\"access_token\", res && res.data.access_token)\n                //   this.checkAuth();\n                //   // this.props.history.push('/XrayDetails');\n                // }).catch(error => {\n                //   alert(\"Something went wrong, Please try again\")\n                // })\n          \n              })\n              .catch((err) => {\n                  console.log(\"err\", err);\n                // alert(\"Something went wrong, Please try again\")\n              })\n            }\n\n    render() {\n        return (\n\n            <div className=\"modal fade\" id=\"modal-container-464146\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n     \n     <button type=\"button\" className=\"close\" id=\"close\" data-dismiss=\"modal\">&times;</button>\n    <div className=\"container\">\n        <div className=\"row\">\n    <div className=\"col-md-12\">\n    <div className=\"login modal-dialog\" role=\"document\">\n        <div className=\"login modal-content\">\n            <Blizzard/>\n            <div className=\"login modal-header text-center\">\n                <h5 className=\"modal-titl text-center w-100\" id=\"myModalLabel\">\n                LOGIN\n                </h5>\n            </div>\n        <div className=\"modal-body\">\n\t\t\t<button className=\"btn\" onClick={()=> this.loginWithBlizzard()} >Login with blizzard</button>\n\t\t\t<button className=\"btn\" > <a target=\"_blank\" href=\"https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=https:%2F%2Fteamenvy.herokuapp.com%2F&response_type=code\"> Login Heroku</a></button>\n\t\t\t<button className=\"btn\" > <a target=\"_blank\" href=\"https://us.battle.net/oauth/authorize?access_type=online&client_id=2551880e979642db877151662e7d6742&redirect_uri=http:%2F%2Flocalhost:3000%2F&response_type=code\"> Login localhost</a></button>\n            \n            <FormGroup controlId=\"username\">\n                <label>E-MAIL</label>\n                <FormControl type=\"text\" name=\"email\" placeholder=\"Enter Your Email\" value={this.state.email} onChange={e => this.validateLoginForm(e)} />\n                {this.loginValidator.message('email', this.state.email, 'required|email')}\n            </FormGroup>\n            <FormGroup>\n            <label>PASSWORD</label>\n                <FormControl type=\"password\" placeholder=\"******\" name=\"password\" value={this.state.password} onChange={e => this.validateLoginForm(e)} />\n                {this.loginValidator.message('password', this.state.password, 'required|alpha_num')}\n            </FormGroup>\n\t\t\t\n                <label className=\"text-center w-100 py-3 mb-0\"><input name=\"rememberme\" type=\"checkbox\" id=\"rememberme\" value=\"forever\" /> Remember Me</label>\n            {/* <button type=\"submit\" onClick={(e) => this.loginForm(e)} disabled={this.state.isSubmit} className=\"btn btn-red btn-block btn-lg\">{this.state.isSubmit ? 'PLEASE WAIT..' : 'LOGIN TO YOUR ACCOUNT'}</button> */}\n\t\t\t\n            <div className=\"form-group text-center mt-0 mb-4\">\n            <p>By clicking below, you accept to our and <a href=\"/\">Terms of Use</a> and <a href=\"/\">Privacy Policy</a></p>\n            </div>\n            <div className=\"text-center wrapper\">\n            <button type=\"submit\" onClick={(e) => this.loginForm(e)} disabled={this.state.isSubmit} className=\"btn btn-red btn-lg\">{this.state.isSubmit ? 'PLEASE WAIT..' : 'LOGIN'}</button>\n            </div>\n           \n        </div>\n        </div>\n        <div className=\"form-group text-center footer login_text\">\n            <p className=\"mt-3\"> Forgot Password?</p>\n            <div className=\"form-group text-center mt-3\">\n            <p>Don't have an account  <a className=\"\" id=\"modal-509828\" href=\"#modal-container-509828\" role=\"button\" data-toggle=\"modal\">REGISTER</a></p>\n            </div>\n            </div>\n            \n    </div>\n\n    </div>\n    </div>\n    </div>\n\n   \n</div>\n        );\n    }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}