{"ast":null,"code":"import _objectSpread from \"/home/capslock/Downloads/envy/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../types/types\";\nconst initalState = {\n  loading: true,\n  data: [],\n  matchdata: [],\n  tourdata: []\n};\n\nconst tournamentsReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case types.FETCH_DATA_BEGIN:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case types.FETCH_TOURNAMENTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        data: action.payload\n      });\n\n    case types.FETCH_FILTER_TOURNAMENTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        data: action.payload\n      });\n\n    case types.FETCH_ALL_TOURNAMENTS_MATCHES:\n      return _objectSpread({}, state, {\n        loading: false,\n        matchdata: action.payload,\n        tourdata: action.payloadd\n      });\n\n    case types.FETCH_SINGLE_TOURNAMENT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        data: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default tournamentsReducer;","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/store/reducer/tournamentsReducer.js"],"names":["types","initalState","loading","data","matchdata","tourdata","tournamentsReducer","state","action","type","FETCH_DATA_BEGIN","FETCH_TOURNAMENTS_SUCCESS","payload","FETCH_FILTER_TOURNAMENTS_SUCCESS","FETCH_ALL_TOURNAMENTS_MATCHES","payloadd","FETCH_SINGLE_TOURNAMENT_SUCCESS"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IADO;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,SAAS,EAAE,EAHK;AAIhBC,EAAAA,QAAQ,EAAE;AAJM,CAApB;;AAOA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGN,WAAT,EAAsBO,MAAtB,KAAiC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,KAAK,CAACU,gBAAX;AACI,+BACOH,KADP;AAEIL,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKF,KAAK,CAACW,yBAAX;AACI,+BACOJ,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAHjB;;AAKA,SAAKZ,KAAK,CAACa,gCAAX;AACA,+BACON,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAHjB;;AAKA,SAAKZ,KAAK,CAACc,6BAAX;AACA,+BACOP,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIE,QAAAA,SAAS,EAAEI,MAAM,CAACI,OAHtB;AAIIP,QAAAA,QAAQ,EAAEG,MAAM,CAACO;AAJrB;;AAMA,SAAKf,KAAK,CAACgB,+BAAX;AACA,+BACOT,KADP;AAEIL,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,IAAI,EAAEK,MAAM,CAACI;AAHjB;;AAMJ;AACI,aAAOL,KAAP;AAjCR;AAmCH,CApCD;;AAsCA,eAAeD,kBAAf","sourcesContent":["import * as types from \"../types/types\";\r\n\r\nconst initalState = {\r\n    loading: true,\r\n    data: [],\r\n    matchdata: [],\r\n    tourdata: []\r\n}\r\n\r\nconst tournamentsReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_DATA_BEGIN:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.FETCH_TOURNAMENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n            case types.FETCH_FILTER_TOURNAMENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload\r\n            }\r\n            case types.FETCH_ALL_TOURNAMENTS_MATCHES:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                matchdata: action.payload,\r\n                tourdata: action.payloadd\r\n            }\r\n            case types.FETCH_SINGLE_TOURNAMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tournamentsReducer;"]},"metadata":{},"sourceType":"module"}