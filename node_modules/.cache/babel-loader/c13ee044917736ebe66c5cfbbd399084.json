{"ast":null,"code":"var _jsxFileName = \"/home/capslock/Downloads/envy/src/components/events.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SimpleReactValidator from 'simple-react-validator';\nimport FullCalendar from 'fullcalendar-reactwrapper';\nimport { getAllevents } from './../store/actions/eventsActions';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport axios from 'axios';\nimport toastr from \"reactjs-toastr\";\nimport $ from \"jquery\";\n\nclass events extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateeventForm = e => {\n      let validate = this.eventsValidator;\n\n      if (validate.allValid()) {} else {\n        validate.showMessages();\n        this.forceUpdate();\n      }\n\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      e.preventDefault();\n    };\n\n    this.addEvent = () => {\n      const _this$state = this.state,\n            title = _this$state.title,\n            description = _this$state.description,\n            start = _this$state.start,\n            end = _this$state.end,\n            time = _this$state.time,\n            location = _this$state.location,\n            price = _this$state.price,\n            per = _this$state.per,\n            contact_phone = _this$state.contact_phone,\n            contact_email = _this$state.contact_email,\n            image = _this$state.image;\n      let request;\n      let formData = new FormData();\n      formData.append('image', $('#eventimage')[0].files[0]);\n      formData.append('title', title);\n      formData.append('description', description);\n      formData.append('end', end);\n      formData.append('time', time);\n      formData.append('start', start);\n      formData.append('location', location);\n      formData.append('price', price);\n      formData.append('per', per);\n      formData.append('contact_phone', contact_phone);\n      formData.append('contact_email', contact_email);\n      request = {\n        method: 'POST',\n        url: `https://xrsports.gg/team/public/user/create-event`,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Auth-Token': `${localStorage.getItem('token')}`\n        },\n        data: formData\n      };\n      axios(request).then(data => {\n        if (data.data.ResponseCode === \"1\") {\n          document.getElementById(\"close\").click();\n          toastr.success(data.data.ResponseText, {\n            displayDuration: 1500\n          });\n          this.props.dispatch(getAllevents());\n          this.setState({\n            title: '',\n            description: '',\n            start: '',\n            end: '',\n            time: '',\n            location: '',\n            price: '',\n            per: '',\n            contact_phone: '',\n            contact_email: '',\n            image: ''\n          });\n        } else {\n          toastr.error(data.data, {\n            displayDuration: 1500\n          });\n        }\n      });\n    };\n\n    this.eventsValidator = new SimpleReactValidator();\n    this.state = {\n      eventss: [],\n      events: [{\n        title: 'All Day Event',\n        imageurl: 'https://xrsports.gg/team/public/profileimages/3d4f3169165346f6fb6a3624a808be6f.png',\n        start: '2020-01-26'\n      }, {\n        title: 'Conference',\n        start: '2020-01-11',\n        end: '2020-01-13'\n      }],\n      title: '',\n      description: '',\n      start: '',\n      end: '',\n      time: '',\n      location: '',\n      price: '',\n      per: '',\n      contact_phone: '',\n      contact_email: '',\n      image: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getAllevents());\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      eventss: nextProps.eventsdata\n    });\n  }\n\n  render() {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = yyyy + '-' + mm + '-' + dd;\n    return React.createElement(\"div\", {\n      className: \"main-content w-100 mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"games-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      id: \"your-custom-ID\",\n      header: {\n        left: 'prev,next today myCustomButton',\n        center: 'title',\n        right: 'month,basicWeek,basicDay'\n      },\n      defaultDate: today,\n      navLinks: true // can click day/week names to navigate views\n      ,\n      editable: true,\n      eventLimit: true // allow \"more\" link when too many events\n      ,\n      events: this.state.eventss,\n      eventRender: function (event, eventElement) {\n        if (event.image) {\n          eventElement.find(\"div.fc-content\").prepend(\"<img src='https://xrsports.gg/team/public/events/\" + event.image + \"' width='100' height='100'>\");\n        }\n      } // eventClick = {function(calEvent, jsEvent, view, resourceObj) {alert(calEvent.title)}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"my-4 px-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"create an event\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"title\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter the Title of the Event\",\n      value: this.state.title,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.eventsValidator.message('title', this.state.title, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Description\"), React.createElement(FormControl, {\n      as: \"textarea\",\n      name: \"description\",\n      placeholder: \"Enter Description\",\n      value: this.state.description,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.eventsValidator.message('description', this.state.description, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(FormControl, {\n      type: \"date\",\n      name: \"start\",\n      placeholder: \"Enter Start Date\",\n      value: this.state.start,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.eventsValidator.message('start', this.state.start, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(FormControl, {\n      type: \"date\",\n      name: \"end\",\n      placeholder: \"Enter End Date\",\n      value: this.state.end,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Time\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"time\",\n      placeholder: \"Enter Time\",\n      value: this.state.time,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.eventsValidator.message('time', this.state.time, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Location\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Enter Location\",\n      value: this.state.location,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), this.eventsValidator.message('location', this.state.location, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Price\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"price\",\n      placeholder: \"Enter the Price\",\n      value: this.state.price,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.eventsValidator.message('price', this.state.price, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Per Person\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"per\",\n      placeholder: \"Enter the Per Person Price\",\n      value: this.state.per,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), this.eventsValidator.message('per', this.state.per, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"contact_phone\",\n      placeholder: \"Enter the Phone number\",\n      value: this.state.contact_phone,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), this.eventsValidator.message('contact_phone', this.state.contact_phone, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"E-Mail\"), React.createElement(FormControl, {\n      type: \"text\",\n      name: \"contact_email\",\n      placeholder: \"Enter the E-Mail\",\n      value: this.state.contact_email,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), this.eventsValidator.message('contact_email', this.state.contact_email, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Image\"), React.createElement(FormControl, {\n      type: \"file\",\n      name: \"image\",\n      id: \"eventimage\",\n      value: this.state.image,\n      onChange: e => this.validateeventForm(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), this.eventsValidator.message('image', this.state.image, 'required')), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: e => this.addEvent(e),\n      className: \"btn btn-red btn-block btn-lg profilebuttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"CREATE\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  eventsdata: state.events.allevents\n});\n\nexport default connect(mapStateToProps)(events);","map":{"version":3,"sources":["/home/capslock/Downloads/envy/src/components/events.jsx"],"names":["React","Component","connect","SimpleReactValidator","FullCalendar","getAllevents","FormGroup","FormControl","FormLabel","axios","toastr","$","events","constructor","props","validateeventForm","e","validate","eventsValidator","allValid","showMessages","forceUpdate","setState","target","name","value","preventDefault","addEvent","state","title","description","start","end","time","location","price","per","contact_phone","contact_email","image","request","formData","FormData","append","files","method","url","headers","localStorage","getItem","data","then","ResponseCode","document","getElementById","click","success","ResponseText","displayDuration","dispatch","error","eventss","imageurl","componentDidMount","componentWillReceiveProps","nextProps","eventsdata","render","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","left","center","right","event","eventElement","find","prepend","message","mapStateToProps","allevents"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SimpleReactValidator from 'simple-react-validator';\nimport FullCalendar from 'fullcalendar-reactwrapper';\nimport {getAllevents} from './../store/actions/eventsActions';\nimport { FormGroup, FormControl, FormLabel } from 'react-bootstrap';\nimport axios from 'axios';\nimport toastr from \"reactjs-toastr\";\nimport $ from \"jquery\";\n\nclass events extends Component {\n  constructor(props) {\n    super(props);\n    this.eventsValidator = new SimpleReactValidator();\n    \n    this.state = {\n        eventss:[],\n    events:[\n                {\n                    title: 'All Day Event',\n                    imageurl: 'https://xrsports.gg/team/public/profileimages/3d4f3169165346f6fb6a3624a808be6f.png',\n                    start: '2020-01-26'\n                },\n                {\n                    title: 'Conference',\n                    start: '2020-01-11',\n                    end: '2020-01-13'\n                },\n            ],\n            title:'',\n            description:'',\n            start:'',                      \n            end:'',\n            time:'' ,\n            location:'',                      \n            price:'' ,                     \n            per:'',                    \n            contact_phone:'',\n            contact_email:'',\n            image:'' ,\n    }\n  }\n  validateeventForm = (e) =>{\n    let validate = this.eventsValidator;\n    if (validate.allValid()) {\n    } else {\n        validate.showMessages();\n        this.forceUpdate();\n    }\n    this.setState({ [e.target.name]: e.target.value });\n    e.preventDefault();\n  }\n    componentDidMount() {\n        this.props.dispatch(getAllevents());\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            eventss: nextProps.eventsdata,\n        })\n    }\n    addEvent =() =>{\n        const {title,description,start, end,time ,location, price , per, contact_phone, contact_email,image} = this.state;\n        let request;\n        let formData = new FormData();\n        formData.append('image', $('#eventimage')[0].files[0]);\n        formData.append('title', title);\n        formData.append('description', description);\n        formData.append('end', end);\n        formData.append('time', time);\n        formData.append('start', start);\n        formData.append('location', location);\n        formData.append('price', price);\n        formData.append('per', per);\n        formData.append('contact_phone', contact_phone);\n        formData.append('contact_email', contact_email);\n           request = {\n            method: 'POST',\n            url: `https://xrsports.gg/team/public/user/create-event`,\n            headers: { 'Content-Type': 'application/json', 'X-Auth-Token': `${localStorage.getItem('token')}` },\n            data: formData\n          };\n        axios(request).then((data) => {\n          if (data.data.ResponseCode === \"1\") {\n            document.getElementById(\"close\").click();\n            toastr.success(data.data.ResponseText, { displayDuration: 1500 })\n            this.props.dispatch(getAllevents());\n            this.setState({title:'',description:'',start:'',end:'',time:'' ,location:'',price:'' ,per:'', contact_phone:'',contact_email:'',image:''})\n             }else {\n            toastr.error(data.data, { displayDuration: 1500 })\n          }\n        });\n    }\n    render() {\n        var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n    today = yyyy + '-' + mm + '-' + dd;\n        return (\n            <div className=\"main-content w-100 mt-4\">\n                <div className=\"container\">\n                    <div className=\"games-list\">\n            <FullCalendar\n             id = \"your-custom-ID\" \n              header = {{\n                  left: 'prev,next today myCustomButton',\n                  center: 'title',\n                  right: 'month,basicWeek,basicDay',\n              }}\n              defaultDate={today}\n              navLinks= {true} // can click day/week names to navigate views\n              editable= {true}\n              eventLimit= {true} // allow \"more\" link when too many events\n              events = {this.state.eventss}\t\n              eventRender = {function(event, eventElement) {\n                if (event.image) {\n                    eventElement.find(\"div.fc-content\").prepend(\"<img src='https://xrsports.gg/team/public/events/\" + event.image +\"' width='100' height='100'>\");\n                }\n            }}\n            // eventClick = {function(calEvent, jsEvent, view, resourceObj) {alert(calEvent.title)}}\n\n          />   \n          <div class=\"my-4 px-4\">\n              <h2 class=\"mb-4\">create an event</h2>\n            <FormGroup >\n                <FormLabel>title</FormLabel>\n                <FormControl type=\"text\" name=\"title\" placeholder=\"Enter the Title of the Event\" value={this.state.title} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('title', this.state.title, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Description</FormLabel>\n                <FormControl as=\"textarea\" name=\"description\" placeholder=\"Enter Description\" value={this.state.description} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('description', this.state.description, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Start Date</FormLabel>\n                <FormControl type=\"date\" name=\"start\" placeholder=\"Enter Start Date\" value={this.state.start} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('start', this.state.start, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>End Date</FormLabel>\n                <FormControl type=\"date\" name=\"end\" placeholder=\"Enter End Date\" value={this.state.end} onChange={(e) => this.validateeventForm(e)} />\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Time</FormLabel>\n                <FormControl type=\"text\" name=\"time\" placeholder=\"Enter Time\" value={this.state.time} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('time', this.state.time, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Location</FormLabel>\n                <FormControl type=\"text\" name=\"location\" placeholder=\"Enter Location\" value={this.state.location} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('location', this.state.location, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Price</FormLabel>\n                <FormControl type=\"text\" name=\"price\" placeholder=\"Enter the Price\" value={this.state.price} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('price', this.state.price, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Per Person</FormLabel>\n                <FormControl type=\"text\" name=\"per\" placeholder=\"Enter the Per Person Price\" value={this.state.per} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('per', this.state.per, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Phone</FormLabel>\n                <FormControl type=\"text\" name=\"contact_phone\" placeholder=\"Enter the Phone number\" value={this.state.contact_phone} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('contact_phone', this.state.contact_phone, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>E-Mail</FormLabel>\n                <FormControl type=\"text\" name=\"contact_email\" placeholder=\"Enter the E-Mail\" value={this.state.contact_email} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('contact_email', this.state.contact_email, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <FormLabel>Image</FormLabel>\n                <FormControl type=\"file\" name=\"image\" id=\"eventimage\" value={this.state.image} onChange={(e) => this.validateeventForm(e)} />\n                {this.eventsValidator.message('image', this.state.image, 'required')}\n            </FormGroup>\n            <FormGroup >\n                <button type=\"submit\"  onClick={(e) => this.addEvent(e)} className=\"btn btn-red btn-block btn-lg profilebuttons\">CREATE</button>\n            </FormGroup>\n          </div> \n          </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    eventsdata: state.events.allevents\n\n})\nexport default connect(mapStateToProps)(events);"]},"metadata":{},"sourceType":"module"}