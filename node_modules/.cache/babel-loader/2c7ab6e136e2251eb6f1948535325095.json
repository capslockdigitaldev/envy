{"ast":null,"code":"import _defineProperty from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/capslock/team_envy/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import SimpleReactValidator from'simple-react-validator';import{FormGroup,FormControl}from'react-bootstrap';import{Link}from'react-router-dom';var login=/*#__PURE__*/function(_Component){_inherits(login,_Component);function login(props){var _this;_classCallCheck(this,login);_this=_possibleConstructorReturn(this,_getPrototypeOf(login).call(this,props));_this.validateLoginForm=function(e){var validate=_this.loginValidator;if(validate.allValid()){// console.log(this.state);\n}else{validate.showMessages();// rerender to show messages for the first time\n_this.forceUpdate();}_this.setState(_defineProperty({},e.target.name,e.target.value));e.preventDefault();};_this.loginForm=function(e){e.preventDefault();// toast.dismiss();\nvar validate=_this.loginValidator;if(validate.allValid()){_this.setState({isSubmit:true});var _this$state=_this.state,email=_this$state.email,password=_this$state.password;var request=new Request('https://xrsports.gg/team/public/user/login',{method:'POST',body:JSON.stringify({email:email,password:password}),headers:new Headers({'Content-Type':'application/json'})});return fetch(request).then(function(res){return res.json();}).then(function(data){if(data.token){localStorage.setItem('token',data.token);_this.props.history.push('/dashboard');}else{_this.setState({isSubmit:false});// toast.error(data.error, alertOptions);\n}}).catch(function(err){console.log(err);});}else{validate.showMessages();// rerender to show messages for the first time\n_this.forceUpdate();}};_this.loginValidator=new SimpleReactValidator();_this.state={email:'',password:'',isSubmit:false};return _this;}_createClass(login,[{key:\"componentDidMount\",value:function componentDidMount(){if(localStorage.getItem('token')){this.props.history.push('/dashboard');}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"login-body-content\"},React.createElement(\"div\",{className:\"col-md-4 login-left\"},React.createElement(\"div\",{className:\"lg-content\"},React.createElement(\"h2\",null,\"V3M\"),React.createElement(\"p\",null,\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\"),React.createElement(\"a\",{href:\"\",className:\"btn btn-gray btn-lg btn-block\"},\"Support\"))),React.createElement(\"div\",{className:\"login-main-content col-md-8 pull-right\"},React.createElement(\"div\",{className:\"login-container\"},React.createElement(\"div\",{className:\"panel panel-default\"},React.createElement(\"div\",{className:\"panel-heading\"},React.createElement(\"img\",{src:\"/assets/img/logo_inner.png\",alt:\"logo\",className:\"logo-img\"}),React.createElement(\"span\",{className:\"login-description\"},\"Please login with your user information.\")),React.createElement(\"div\",{className:\"panel-body\"},React.createElement(\"form\",null,React.createElement(FormGroup,{controlId:\"username\"},React.createElement(FormControl,{type:\"text\",name:\"email\",placeholder:\"Enter Your Email\",value:this.state.email,onChange:function onChange(e){return _this2.validateLoginForm(e);}}),this.loginValidator.message('email',this.state.email,'required|email')),React.createElement(FormGroup,{controlId:\"password\"},React.createElement(FormControl,{type:\"password\",placeholder:\"******\",name:\"password\",value:this.state.password,onChange:function onChange(e){return _this2.validateLoginForm(e);}}),this.loginValidator.message('password',this.state.password,'required|alpha_num')),React.createElement(\"div\",{className:\"form-group row login-tools\"},React.createElement(\"div\",{className:\"col-xs-12 col-sm-6 login-remember\"},React.createElement(\"div\",{className:\"log-body-checkbox\"},React.createElement(\"input\",{type:\"checkbox\",id:\"remember\"}),React.createElement(\"label\",{htmlFor:\"remember\"},\"Remember me\"))),React.createElement(\"div\",{className:\"col-xs-12 col-sm-6 login-forgot-password\"},React.createElement(\"a\",{href:\"#\"},\"Forgot Password?\"))),React.createElement(\"div\",{className:\"form-group login-submit\"},React.createElement(\"button\",{type:\"submit\",onClick:function onClick(e){return _this2.loginForm(e);},disabled:this.state.isSubmit,className:\"btn btn-red btn-block btn-lg\"},this.state.isSubmit?'Please wait':'Login')),React.createElement(\"div\",{className:\"form-group login-signup\"},React.createElement(Link,{to:\"/signup\",className:\"btn btn-red btn-block\"},\"Create A New Account\")),React.createElement(\"label\",{className:\"text-danger\"})))))));}}]);return login;}(Component);export default connect()(login);","map":{"version":3,"sources":["/home/capslock/team_envy/src/components/login.jsx"],"names":["React","Component","connect","SimpleReactValidator","FormGroup","FormControl","Link","login","props","validateLoginForm","e","validate","loginValidator","allValid","showMessages","forceUpdate","setState","target","name","value","preventDefault","loginForm","isSubmit","state","email","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","data","token","localStorage","setItem","history","push","catch","err","console","log","getItem","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { FormGroup, FormControl } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.loginValidator = new SimpleReactValidator();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            isSubmit: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('token')) {\r\n            this.props.history.push('/dashboard')\r\n        }\r\n    }\r\n\r\n\r\n    validateLoginForm = (e) => {\r\n        let validate = this.loginValidator;\r\n        if (validate.allValid()) {\r\n            // console.log(this.state);\r\n\r\n        } else {\r\n            validate.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        e.preventDefault();\r\n    }\r\n\r\n    loginForm = (e) => {\r\n        e.preventDefault();\r\n        // toast.dismiss();\r\n        let validate = this.loginValidator;\r\n        if (validate.allValid()) {\r\n            this.setState({ isSubmit: true });\r\n            const { email, password } = this.state;\r\n            const request = new Request('https://xrsports.gg/team/public/user/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ email, password }),\r\n                headers: new Headers({ 'Content-Type': 'application/json' }),\r\n            })\r\n            return fetch(request).then(res => res.json())\r\n                .then((data) => {\r\n                    if (data.token) {\r\n                        localStorage.setItem('token', data.token);\r\n                        this.props.history.push('/dashboard')\r\n                    } else {\r\n                        this.setState({ isSubmit: false });\r\n                        // toast.error(data.error, alertOptions);\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n\r\n        } else {\r\n            validate.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"login-body-content\">\r\n                <div className=\"col-md-4 login-left\">\r\n                    <div className=\"lg-content\">\r\n                        <h2>V3M</h2>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</p>\r\n                        <a href=\"\" className=\"btn btn-gray btn-lg btn-block\">Support</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-main-content col-md-8 pull-right\">\r\n                    <div className=\"login-container\">\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <img src=\"/assets/img/logo_inner.png\" alt=\"logo\" className=\"logo-img\" />\r\n                                <span className=\"login-description\">Please login with your user information.</span>\r\n                            </div>\r\n                            <div className=\"panel-body\">\r\n                                <form>\r\n                                    <FormGroup controlId=\"username\">\r\n                                        <FormControl type=\"text\" name=\"email\" placeholder=\"Enter Your Email\" value={this.state.email} onChange={e => this.validateLoginForm(e)} />\r\n                                        {this.loginValidator.message('email', this.state.email, 'required|email')}\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup controlId=\"password\" >\r\n                                        <FormControl type=\"password\" placeholder=\"******\" name=\"password\" value={this.state.password} onChange={e => this.validateLoginForm(e)} />\r\n                                        {this.loginValidator.message('password', this.state.password, 'required|alpha_num')}\r\n                                    </FormGroup>\r\n                                    <div className=\"form-group row login-tools\">\r\n                                        <div className=\"col-xs-12 col-sm-6 login-remember\">\r\n                                            <div className=\"log-body-checkbox\">\r\n                                                <input type=\"checkbox\" id=\"remember\" />\r\n                                                <label htmlFor=\"remember\">Remember me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-xs-12 col-sm-6 login-forgot-password\"><a href=\"#\">Forgot Password?</a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group login-submit\">\r\n                                        <button type=\"submit\" onClick={(e) => this.loginForm(e)} disabled={this.state.isSubmit} className=\"btn btn-red btn-block btn-lg\">{this.state.isSubmit ? 'Please wait' : 'Login'}</button>\r\n                                    </div>\r\n                                    <div className=\"form-group login-signup\">\r\n                  <Link to=\"/signup\" className=\"btn btn-red btn-block\">Create A New Account</Link>\r\n                </div>\r\n                                    <label className=\"text-danger\"></label>\r\n                                </form>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(login);"]},"metadata":{},"sourceType":"module"}